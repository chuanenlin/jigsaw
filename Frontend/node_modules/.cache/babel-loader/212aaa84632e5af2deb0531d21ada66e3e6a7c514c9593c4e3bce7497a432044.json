{"ast":null,"code":"export const text2MusicParams = {\n  model: {},\n  schema: {\n    type: 'object',\n    properties: {\n      // eslint-disable-next-line camelcase\n      model_version: {\n        type: 'string',\n        title: 'Model Version',\n        default: 'large',\n        enum: ['large', 'melody', 'encode-decode'],\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does'\n        }\n      },\n      duration: {\n        type: 'integer',\n        title: 'Duration',\n        default: 5,\n        // minimum: 1,\n        // maximum: 1000,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does'\n        }\n      },\n      seed: {\n        type: 'integer',\n        title: 'Seed',\n        default: 0,\n        // minimum: 0,\n        // maximum: 1000,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does'\n        }\n      }\n    },\n    required: ['model_version', 'duration', 'output_format', 'seed']\n  }\n};","map":{"version":3,"names":["text2MusicParams","model","schema","type","properties","model_version","title","default","enum","uniforms","help","duration","seed","required"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/constants/block-list/text2music/text2music.params.ts"],"sourcesContent":["import { JSONSchemaType } from 'ajv'\nimport { BlockParameters } from '../../../types'\n\nexport interface Text2MusicParams {\n  prompt: string\n  model_version: string\n  duration: number\n  seed: number\n}\n\nexport const text2MusicParams: BlockParameters = {\n  model: {},\n  schema: {\n    type: 'object',\n    properties: {\n      // eslint-disable-next-line camelcase\n      model_version: {\n        type: 'string',\n        title: 'Model Version',\n        default: 'large',\n        enum: ['large', 'melody', 'encode-decode'],\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does',\n        },\n      },\n      duration: {\n        type: 'integer',\n        title: 'Duration',\n        default: 5,\n        // minimum: 1,\n        // maximum: 1000,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does',\n        },\n      },\n      seed: {\n        type: 'integer',\n        title: 'Seed',\n        default: 0,\n        // minimum: 0,\n        // maximum: 1000,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does',\n        },\n      },\n    },\n    required: ['model_version', 'duration', 'output_format', 'seed'],\n  } as JSONSchemaType<Omit<Text2MusicParams, 'prompt'>>,\n}\n"],"mappings":"AAUA,OAAO,MAAMA,gBAAiC,GAAG;EAC/CC,KAAK,EAAE,CAAC,CAAC;EACTC,MAAM,EAAE;IACNC,IAAI,EAAE,QAAQ;IACdC,UAAU,EAAE;MACV;MACAC,aAAa,EAAE;QACbF,IAAI,EAAE,QAAQ;QACdG,KAAK,EAAE,eAAe;QACtBC,OAAO,EAAE,OAAO;QAChBC,IAAI,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,eAAe,CAAC;QAC1CC,QAAQ,EAAE;UACRC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,QAAQ,EAAE;QACRR,IAAI,EAAE,SAAS;QACfG,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE,CAAC;QACV;QACA;QACAE,QAAQ,EAAE;UACRC,IAAI,EAAE;QACR;MACF,CAAC;MACDE,IAAI,EAAE;QACJT,IAAI,EAAE,SAAS;QACfG,KAAK,EAAE,MAAM;QACbC,OAAO,EAAE,CAAC;QACV;QACA;QACAE,QAAQ,EAAE;UACRC,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACDG,QAAQ,EAAE,CAAC,eAAe,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM;EACjE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}