{"ast":null,"code":"var _jsxFileName = \"/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/tooltip/Tooltip.tsx\",\n  _s = $RefreshSig$();\nimport { Stack } from '@mui/material';\nimport { DummyBlockMeta } from '../../constants';\nimport { useTooltip } from '../../hooks/useTooltip';\nimport { useTooltipContext } from '../../context';\nimport { MediaViewerContainer } from './MediaViewerContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Tooltip = () => {\n  _s();\n  var _tooltipInfo$blockSvg, _block$meta, _meta$properties, _meta$exampleInput;\n  const {\n    tooltipInfo\n  } = useTooltipContext();\n  const {\n    onMouseOverTooltipComponent,\n    onMouseLeaveTooltipComponent\n  } = useTooltip();\n  if (!(tooltipInfo !== null && tooltipInfo !== void 0 && tooltipInfo.blockSvg) || !tooltipInfo.event) return null;\n  const block = JSON.parse((_tooltipInfo$blockSvg = tooltipInfo.blockSvg.data) !== null && _tooltipInfo$blockSvg !== void 0 ? _tooltipInfo$blockSvg : '').block;\n  if (!block || block.blockType === 'input') return null;\n  const meta = (_block$meta = block.meta) !== null && _block$meta !== void 0 ? _block$meta : DummyBlockMeta;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"column\",\n    className: \"tooltip-container\",\n    style: {\n      position: 'fixed',\n      width: 320,\n      top: tooltipInfo.event.clientY + 10,\n      left: tooltipInfo.event.clientX + 10,\n      zIndex: 10000\n    },\n    onMouseEnter: onMouseOverTooltipComponent,\n    onMouseLeave: onMouseLeaveTooltipComponent,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"tooltip-section-title\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltip-text\",\n        children: meta.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"tooltip-section-title\",\n        children: \"Runtime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tooltip-text\",\n        children: (_meta$properties = meta.properties) === null || _meta$properties === void 0 ? void 0 : _meta$properties.maxRuntime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"tooltip-section-title\",\n        children: \"Example input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip-examples\",\n        children: Object.entries((_meta$exampleInput = meta.exampleInput) !== null && _meta$exampleInput !== void 0 ? _meta$exampleInput : {}).map((_ref, index) => {\n          let [modality, content] = _ref;\n          return Array.isArray(content) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: content.map((c, i) => /*#__PURE__*/_jsxDEV(MediaViewerContainer, {\n              content: c,\n              modality: modality\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(MediaViewerContainer, {\n            content: content,\n            modality: modality\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"tooltip-section-title\",\n        children: \"Example output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip-examples\",\n        children: /*#__PURE__*/_jsxDEV(MediaViewerContainer, {\n          modality: block.outputModality,\n          content: meta.exampleOutput || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Tooltip, \"y37uK2/qjGs2EoWMhCrSKQ4siok=\", false, function () {\n  return [useTooltipContext, useTooltip];\n});\n_c = Tooltip;\nvar _c;\n$RefreshReg$(_c, \"Tooltip\");","map":{"version":3,"names":["Stack","DummyBlockMeta","useTooltip","useTooltipContext","MediaViewerContainer","jsxDEV","_jsxDEV","Tooltip","_s","_tooltipInfo$blockSvg","_block$meta","_meta$properties","_meta$exampleInput","tooltipInfo","onMouseOverTooltipComponent","onMouseLeaveTooltipComponent","blockSvg","event","block","JSON","parse","data","blockType","meta","direction","className","style","position","width","top","clientY","left","clientX","zIndex","onMouseEnter","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","description","properties","maxRuntime","Object","entries","exampleInput","map","_ref","index","modality","content","Array","isArray","c","i","outputModality","exampleOutput","_c","$RefreshReg$"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/tooltip/Tooltip.tsx"],"sourcesContent":["import { Block, Modality } from '../../types'\nimport { Stack } from '@mui/material'\nimport { DummyBlockMeta } from '../../constants'\nimport { useTooltip } from '../../hooks/useTooltip'\nimport { useTooltipContext } from '../../context'\nimport { MediaViewerContainer } from './MediaViewerContainer'\n\nexport const Tooltip = () => {\n  const { tooltipInfo } = useTooltipContext()\n  const { onMouseOverTooltipComponent, onMouseLeaveTooltipComponent } = useTooltip()\n\n  if (!tooltipInfo?.blockSvg || !tooltipInfo.event) return null\n\n  const block = JSON.parse(tooltipInfo.blockSvg.data ?? '').block as Block | undefined\n  if (!block || block.blockType === 'input') return null\n\n  const meta = block.meta ?? DummyBlockMeta\n  \n  return (\n    <Stack\n      direction=\"column\"\n      className=\"tooltip-container\"\n      style={{\n        position: 'fixed',\n        width: 320,\n        top: tooltipInfo.event.clientY + 10,\n        left: tooltipInfo.event.clientX + 10,\n        zIndex: 10000,\n      }}\n      onMouseEnter={onMouseOverTooltipComponent}\n      onMouseLeave={onMouseLeaveTooltipComponent}\n    >\n      <div className=\"tooltip-content\">\n        <h3 className=\"tooltip-section-title\">Description</h3>\n        <p className=\"tooltip-text\">{meta.description}</p>\n\n        <h3 className=\"tooltip-section-title\">Runtime</h3>\n        <p className=\"tooltip-text\">{meta.properties?.maxRuntime}</p>\n\n        <h3 className=\"tooltip-section-title\">Example input</h3>\n        <div className=\"tooltip-examples\">\n          {Object.entries(meta.exampleInput ?? {}).map(([modality, content], index) => (\n            Array.isArray(content) ? (\n              <div key={index} className=\"flex flex-col gap-2\">\n                {content.map((c, i) => (\n                  <MediaViewerContainer key={i} content={c} modality={modality as Modality} />\n                ))}\n              </div>\n            ) : (\n              <MediaViewerContainer key={index} content={content} modality={modality as Modality} />\n            )\n          ))}\n        </div>\n\n        <h3 className=\"tooltip-section-title\">Example output</h3>\n        <div className=\"tooltip-examples\">\n          <MediaViewerContainer\n            modality={block.outputModality}\n            content={meta.exampleOutput || ''}\n          />\n        </div>\n      </div>\n    </Stack>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}