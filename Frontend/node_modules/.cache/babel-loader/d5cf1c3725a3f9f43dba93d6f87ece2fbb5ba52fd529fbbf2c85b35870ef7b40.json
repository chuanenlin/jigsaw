{"ast":null,"code":"export const text2VideoParams = {\n  model: {},\n  schema: {\n    type: 'object',\n    properties: {\n      // eslint-disable-next-line camelcase\n      num_frames: {\n        type: 'integer',\n        title: 'Number of Frames',\n        default: 50,\n        // minimum: 1,\n        // maximum: 100,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does'\n        }\n      },\n      // eslint-disable-next-line camelcase\n      num_inference_steps: {\n        type: 'integer',\n        title: 'Number of Inference Steps',\n        default: 50,\n        // minimum: 1,\n        // maximum: 1000,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does'\n        }\n      },\n      fps: {\n        type: 'integer',\n        title: 'Frames Per Second',\n        default: 8,\n        // minimum: 1,\n        // maximum: 60,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does'\n        }\n      },\n      seed: {\n        type: 'integer',\n        title: 'Seed',\n        default: 0,\n        // minimum: 0,\n        // maximum: 1000,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does'\n        }\n      }\n    },\n    required: ['num_frames', 'num_inference_steps', 'fps', 'seed']\n  }\n};","map":{"version":3,"names":["text2VideoParams","model","schema","type","properties","num_frames","title","default","uniforms","help","num_inference_steps","fps","seed","required"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/constants/block-list/text2video/text2video.params.ts"],"sourcesContent":["import { JSONSchemaType } from 'ajv'\nimport { BlockParameters } from '../../../types'\n\nexport interface Text2VideoParams {\n  prompt: string\n  num_frames: number\n  num_inference_steps: number\n  fps: number\n  seed: number\n}\n\nexport const text2VideoParams: BlockParameters = {\n  model: {},\n  schema: {\n    type: 'object',\n    properties: {\n      // eslint-disable-next-line camelcase\n      num_frames: {\n        type: 'integer',\n        title: 'Number of Frames',\n        default: 50,\n        // minimum: 1,\n        // maximum: 100,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does',\n        },\n      },\n      // eslint-disable-next-line camelcase\n      num_inference_steps: {\n        type: 'integer',\n        title: 'Number of Inference Steps',\n        default: 50,\n        // minimum: 1,\n        // maximum: 1000,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does',\n        },\n      },\n      fps: {\n        type: 'integer',\n        title: 'Frames Per Second',\n        default: 8,\n        // minimum: 1,\n        // maximum: 60,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does',\n        },\n      },\n      seed: {\n        type: 'integer',\n        title: 'Seed',\n        default: 0,\n        // minimum: 0,\n        // maximum: 1000,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does',\n        },\n      },\n    },\n    required: ['num_frames', 'num_inference_steps', 'fps', 'seed'],\n  } as JSONSchemaType<Omit<Text2VideoParams, 'prompt'>>,\n}\n"],"mappings":"AAWA,OAAO,MAAMA,gBAAiC,GAAG;EAC/CC,KAAK,EAAE,CAAC,CAAC;EACTC,MAAM,EAAE;IACNC,IAAI,EAAE,QAAQ;IACdC,UAAU,EAAE;MACV;MACAC,UAAU,EAAE;QACVF,IAAI,EAAE,SAAS;QACfG,KAAK,EAAE,kBAAkB;QACzBC,OAAO,EAAE,EAAE;QACX;QACA;QACAC,QAAQ,EAAE;UACRC,IAAI,EAAE;QACR;MACF,CAAC;MACD;MACAC,mBAAmB,EAAE;QACnBP,IAAI,EAAE,SAAS;QACfG,KAAK,EAAE,2BAA2B;QAClCC,OAAO,EAAE,EAAE;QACX;QACA;QACAC,QAAQ,EAAE;UACRC,IAAI,EAAE;QACR;MACF,CAAC;MACDE,GAAG,EAAE;QACHR,IAAI,EAAE,SAAS;QACfG,KAAK,EAAE,mBAAmB;QAC1BC,OAAO,EAAE,CAAC;QACV;QACA;QACAC,QAAQ,EAAE;UACRC,IAAI,EAAE;QACR;MACF,CAAC;MACDG,IAAI,EAAE;QACJT,IAAI,EAAE,SAAS;QACfG,KAAK,EAAE,MAAM;QACbC,OAAO,EAAE,CAAC;QACV;QACA;QACAC,QAAQ,EAAE;UACRC,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACDI,QAAQ,EAAE,CAAC,YAAY,EAAE,qBAAqB,EAAE,KAAK,EAAE,MAAM;EAC/D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}