{"ast":null,"code":"import { enqueueSnackbar } from 'notistack';\nimport { modalityEmojis } from '../../constants';\nimport { Modality } from '../../types';\nexport const getOutputFromResponse = response => {\n  if ('text_output' in response) {\n    return response.text_output;\n  } else if ('image_output' in response) {\n    return response.image_output;\n  } else if ('audio_output' in response) {\n    return response.audio_output;\n  } else if ('video_output' in response) {\n    return response.video_output;\n  } else if ('3d_response' in response) {\n    return response['3d_response'];\n  } else if ('content' in response) {\n    return response.content;\n  }\n};\nexport const isInputBlock = processableBlock => {\n  return (processableBlock === null || processableBlock === void 0 ? void 0 : processableBlock.blockData.blockType) === 'input';\n};\nexport const getInputCount = processableBlock => {\n  return (processableBlock === null || processableBlock === void 0 ? void 0 : processableBlock.blockData.inputModality.length) || 0;\n};\nexport const getInputModality = (index, processableBlock) => {\n  return processableBlock === null || processableBlock === void 0 ? void 0 : processableBlock.blockData.inputModality[index].modality;\n};\nexport const getModalityEmojiOrEmpty = modality => {\n  if (!modality) return '';\n  return modalityEmojis[modality];\n};\nexport const hasOutput = block => {\n  if (!block) {\n    return false;\n  }\n  return block.output !== undefined;\n};\nexport const hasInput = block => !!(block !== null && block !== void 0 && block.inputs) || (block === null || block === void 0 ? void 0 : block.blockData.outputModality) === Modality.Text;\nexport const isTextOutput = block => {\n  if (!block) {\n    return false;\n  }\n  return block.blockData.outputModality === Modality.Text;\n};\nexport const isTextInput = block => {\n  if (!block) {\n    return false;\n  }\n  return block.blockData.inputModality.find(_ref => {\n    let {\n      modality\n    } = _ref;\n    return modality === Modality.Text;\n  });\n};\nexport const copyToClipBoard = async content => await navigator.clipboard.writeText(content);\nexport const saveFile = async url => {\n  try {\n    const response = await fetch(url);\n    const data = await response.blob();\n    const link = document.createElement('a');\n    link.href = window.URL.createObjectURL(data);\n    const fileName = url.split('/').pop();\n    link.download = fileName || 'output';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  } catch (error) {\n    enqueueSnackbar('An error occured while saving the file', {\n      variant: 'error'\n    });\n    console.error('Error downloading file:', error);\n  }\n};","map":{"version":3,"names":["enqueueSnackbar","modalityEmojis","Modality","getOutputFromResponse","response","text_output","image_output","audio_output","video_output","content","isInputBlock","processableBlock","blockData","blockType","getInputCount","inputModality","length","getInputModality","index","modality","getModalityEmojiOrEmpty","hasOutput","block","output","undefined","hasInput","inputs","outputModality","Text","isTextOutput","isTextInput","find","_ref","copyToClipBoard","navigator","clipboard","writeText","saveFile","url","fetch","data","blob","link","document","createElement","href","window","URL","createObjectURL","fileName","split","pop","download","body","appendChild","click","removeChild","error","variant","console"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/input-output/input-output.util.ts"],"sourcesContent":["import { enqueueSnackbar } from 'notistack'\nimport { modalityEmojis } from '../../constants'\nimport { BlockProcessOutput, ProcessableBlock } from '../../context/WorkspaceContext'\nimport { Modality } from '../../types'\n\nexport const getOutputFromResponse = (response: BlockProcessOutput) => {\n  if ('text_output' in response) {\n    return response.text_output\n  } else if ('image_output' in response) {\n    return response.image_output\n  } else if ('audio_output' in response) {\n    return response.audio_output\n  } else if ('video_output' in response) {\n    return response.video_output\n  } else if ('3d_response' in response) {\n    return response['3d_response']\n  } else if ('content' in response) {\n    return response.content\n  }\n}\n\nexport const isInputBlock = (processableBlock?: ProcessableBlock) => {\n  return processableBlock?.blockData.blockType === 'input'\n}\n\nexport const getInputCount = (processableBlock?: ProcessableBlock) => {\n  return processableBlock?.blockData.inputModality.length || 0\n}\n\nexport const getInputModality = (\n  index: number,\n  processableBlock?: ProcessableBlock,\n): Modality | undefined => {\n  return processableBlock?.blockData.inputModality[index].modality\n}\n\nexport const getModalityEmojiOrEmpty = (modality?: Modality) => {\n  if (!modality) return ''\n  return modalityEmojis[modality]\n}\n\nexport const hasOutput = (block?: ProcessableBlock) => {\n  if (!block) {\n    return false\n  }\n\n  return block.output !== undefined\n}\n\nexport const hasInput = (block?: ProcessableBlock) =>\n  !!block?.inputs || block?.blockData.outputModality === Modality.Text\n\nexport const isTextOutput = (block?: ProcessableBlock) => {\n  if (!block) {\n    return false\n  }\n\n  return block.blockData.outputModality === Modality.Text\n}\n\nexport const isTextInput = (block?: ProcessableBlock) => {\n  if (!block) {\n    return false\n  }\n\n  return block.blockData.inputModality.find(({ modality }) => modality === Modality.Text)\n}\n\nexport const copyToClipBoard = async (content: string) =>\n  await navigator.clipboard.writeText(content)\n\nexport const saveFile = async (url: string) => {\n  try {\n    const response = await fetch(url)\n    const data = await response.blob()\n    const link = document.createElement('a')\n    link.href = window.URL.createObjectURL(data)\n    const fileName = url.split('/').pop()\n    link.download = fileName || 'output'\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  } catch (error) {\n    enqueueSnackbar('An error occured while saving the file', { variant: 'error' })\n    console.error('Error downloading file:', error)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}