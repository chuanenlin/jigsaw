{"ast":null,"code":"var _jsxFileName = \"/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/atoms/LoadingIndicator.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { CircularProgress, Typography, Box, LinearProgress, keyframes } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Modality } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\nconst AnimatedBox = styled(Box)`\n  animation: ${fadeIn} 0.5s ease-in-out;\n`;\n_c = AnimatedBox;\nconst LoadingContainer = styled(Box)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    padding: theme.spacing(4),\n    gap: theme.spacing(3),\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n    borderRadius: theme.shape.borderRadius * 2,\n    backdropFilter: 'blur(8px)'\n  };\n});\n_c2 = LoadingContainer;\nconst ModalityIcon = styled('div')(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    fontSize: '3rem',\n    marginBottom: theme.spacing(2)\n  };\n});\n_c3 = ModalityIcon;\nconst ProgressContainer = styled(Box)(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return {\n    width: '80%',\n    maxWidth: '300px',\n    marginTop: theme.spacing(2)\n  };\n});\n_c4 = ProgressContainer;\nexport const LoadingIndicator = _ref4 => {\n  _s();\n  let {\n    modality,\n    progress,\n    message = 'Processing...',\n    tips = ['This might take a minute...', 'AI models are working their magic...', 'Almost there...', 'Creating something amazing...']\n  } = _ref4;\n  const [currentTip, setCurrentTip] = React.useState(0);\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTip(prev => (prev + 1) % tips.length);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [tips.length]);\n  const getModalityIcon = () => {\n    switch (modality) {\n      case Modality.Image:\n        return '🖼️';\n      case Modality.Video:\n        return '🎥';\n      case Modality.Audio:\n        return '🎵';\n      case Modality.Text:\n        return '📝';\n      case Modality.ThreeDimentional:\n        return '🎮';\n      case Modality.Sketch:\n        return '✏️';\n      default:\n        return '⚡';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadingContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ModalityIcon, {\n      children: getModalityIcon()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 60,\n      thickness: 4,\n      sx: {\n        color: 'secondary.main'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), progress !== undefined && /*#__PURE__*/_jsxDEV(ProgressContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: progress,\n        sx: {\n          height: 8,\n          borderRadius: 4,\n          backgroundColor: 'rgba(0, 0, 0, 0.1)',\n          '& .MuiLinearProgress-bar': {\n            borderRadius: 4\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: {\n          display: 'block',\n          textAlign: 'center',\n          marginTop: 1\n        },\n        color: \"textSecondary\",\n        children: [Math.round(progress), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        textAlign: 'center',\n        fontWeight: 500\n      },\n      color: \"textPrimary\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatedBox, {\n      sx: {\n        opacity: 0.8\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          textAlign: 'center',\n          color: 'text.secondary'\n        },\n        children: tips[currentTip]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingIndicator, \"U6HTK6NPLghx9+J7qjbYZJSjBCE=\");\n_c5 = LoadingIndicator;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AnimatedBox\");\n$RefreshReg$(_c2, \"LoadingContainer\");\n$RefreshReg$(_c3, \"ModalityIcon\");\n$RefreshReg$(_c4, \"ProgressContainer\");\n$RefreshReg$(_c5, \"LoadingIndicator\");","map":{"version":3,"names":["React","CircularProgress","Typography","Box","LinearProgress","keyframes","styled","Modality","jsxDEV","_jsxDEV","fadeIn","AnimatedBox","_c","LoadingContainer","_ref","theme","display","flexDirection","alignItems","justifyContent","width","height","padding","spacing","gap","backgroundColor","borderRadius","shape","backdropFilter","_c2","ModalityIcon","_ref2","fontSize","marginBottom","_c3","ProgressContainer","_ref3","maxWidth","marginTop","_c4","LoadingIndicator","_ref4","_s","modality","progress","message","tips","currentTip","setCurrentTip","useState","useEffect","interval","setInterval","prev","length","clearInterval","getModalityIcon","Image","Video","Audio","Text","ThreeDimentional","Sketch","children","fileName","_jsxFileName","lineNumber","columnNumber","size","thickness","sx","color","undefined","variant","value","textAlign","Math","round","fontWeight","opacity","_c5","$RefreshReg$"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/atoms/LoadingIndicator.tsx"],"sourcesContent":["import React from 'react';\nimport { CircularProgress, Typography, Box, LinearProgress, keyframes } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Modality } from '../../types';\n\ninterface LoadingIndicatorProps {\n  modality?: Modality;\n  progress?: number;\n  message?: string;\n  tips?: string[];\n}\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst AnimatedBox = styled(Box)`\n  animation: ${fadeIn} 0.5s ease-in-out;\n`;\n\nconst LoadingContainer = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: '100%',\n  height: '100%',\n  padding: theme.spacing(4),\n  gap: theme.spacing(3),\n  backgroundColor: 'rgba(255, 255, 255, 0.8)',\n  borderRadius: theme.shape.borderRadius * 2,\n  backdropFilter: 'blur(8px)',\n}));\n\nconst ModalityIcon = styled('div')(({ theme }) => ({\n  fontSize: '3rem',\n  marginBottom: theme.spacing(2),\n}));\n\nconst ProgressContainer = styled(Box)(({ theme }) => ({\n  width: '80%',\n  maxWidth: '300px',\n  marginTop: theme.spacing(2),\n}));\n\nexport const LoadingIndicator: React.FC<LoadingIndicatorProps> = ({\n  modality,\n  progress,\n  message = 'Processing...',\n  tips = [\n    'This might take a minute...',\n    'AI models are working their magic...',\n    'Almost there...',\n    'Creating something amazing...',\n  ],\n}) => {\n  const [currentTip, setCurrentTip] = React.useState(0);\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTip((prev) => (prev + 1) % tips.length);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, [tips.length]);\n\n  const getModalityIcon = () => {\n    switch (modality) {\n      case Modality.Image:\n        return '🖼️';\n      case Modality.Video:\n        return '🎥';\n      case Modality.Audio:\n        return '🎵';\n      case Modality.Text:\n        return '📝';\n      case Modality.ThreeDimentional:\n        return '🎮';\n      case Modality.Sketch:\n        return '✏️';\n      default:\n        return '⚡';\n    }\n  };\n\n  return (\n    <LoadingContainer>\n      <ModalityIcon>{getModalityIcon()}</ModalityIcon>\n      \n      <CircularProgress\n        size={60}\n        thickness={4}\n        sx={{\n          color: 'secondary.main',\n        }}\n      />\n\n      {progress !== undefined && (\n        <ProgressContainer>\n          <LinearProgress\n            variant=\"determinate\"\n            value={progress}\n            sx={{\n              height: 8,\n              borderRadius: 4,\n              backgroundColor: 'rgba(0, 0, 0, 0.1)',\n              '& .MuiLinearProgress-bar': {\n                borderRadius: 4,\n              },\n            }}\n          />\n          <Typography\n            variant=\"caption\"\n            sx={{\n              display: 'block',\n              textAlign: 'center',\n              marginTop: 1,\n            }}\n            color=\"textSecondary\"\n          >\n            {Math.round(progress)}%\n          </Typography>\n        </ProgressContainer>\n      )}\n\n      <Typography\n        variant=\"h6\"\n        sx={{\n          textAlign: 'center',\n          fontWeight: 500,\n        }}\n        color=\"textPrimary\"\n      >\n        {message}\n      </Typography>\n\n      <AnimatedBox\n        sx={{\n          opacity: 0.8,\n        }}\n      >\n        <Typography\n          variant=\"body2\"\n          sx={{\n            textAlign: 'center',\n            color: 'text.secondary',\n          }}\n        >\n          {tips[currentTip]}\n        </Typography>\n      </AnimatedBox>\n    </LoadingContainer>\n  );\n}; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}