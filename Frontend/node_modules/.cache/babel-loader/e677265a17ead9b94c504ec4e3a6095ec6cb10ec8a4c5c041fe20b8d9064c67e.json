{"ast":null,"code":"var _jsxFileName = \"/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/input-output/DropZone.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { enqueueSnackbar } from 'notistack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 16,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  width: '50%'\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n};\n\nexport const DropZone = _ref => {\n  _s();\n  let {\n    accepted,\n    onDrop,\n    modality\n  } = _ref;\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    noClick: true,\n    multiple: false,\n    accept: {\n      [`${modality.toLowerCase()}/*`]: accepted\n    },\n    onDrop: (acceptedFiles, fileRejections) => {\n      if (fileRejections.length > 0) {\n        enqueueSnackbar(`File type not supported ${fileRejections[0].file.type}`, {\n          variant: 'error'\n        });\n        return;\n      }\n      const reader = new FileReader();\n      reader.readAsDataURL(acceptedFiles[0]);\n      reader.onload = () => onDrop({\n        name: acceptedFiles[0].name,\n        content: reader.result\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps({\n        style\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          fontSize: '18px'\n        },\n        children: [\"Drag & drop file (supported file formats: \", accepted.join(', '), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(DropZone, \"a6n/8sU/3Si3hjIh3DKgs8O3D8A=\", false, function () {\n  return [useDropzone];\n});\n_c = DropZone;\nvar _c;\n$RefreshReg$(_c, \"DropZone\");","map":{"version":3,"names":["React","useDropzone","enqueueSnackbar","jsxDEV","_jsxDEV","style","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","width","DropZone","_ref","_s","accepted","onDrop","modality","getRootProps","getInputProps","noClick","multiple","accept","toLowerCase","acceptedFiles","fileRejections","length","file","type","variant","reader","FileReader","readAsDataURL","onload","name","content","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","fontSize","join","_c","$RefreshReg$"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/input-output/DropZone.tsx"],"sourcesContent":["import React from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { Modality } from '../../types'\nimport { enqueueSnackbar } from 'notistack'\nimport { SelectedFile } from '../../api'\n\nconst style = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 16,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  width: '50%',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n} as any\n\ninterface DropZoneProps {\n  accepted: string[]\n  onDrop: (selectedFile: SelectedFile) => void\n  modality: Modality\n}\n\nexport const DropZone = ({ accepted, onDrop, modality }: DropZoneProps) => {\n  const { getRootProps, getInputProps } = useDropzone({\n    noClick: true,\n    multiple: false,\n    accept: {\n      [`${modality.toLowerCase()}/*`]: accepted,\n    },\n    onDrop: (acceptedFiles, fileRejections) => {\n      if (fileRejections.length > 0) {\n        enqueueSnackbar(`File type not supported ${fileRejections[0].file.type}`, {\n          variant: 'error',\n        })\n        return\n      }\n\n      const reader = new FileReader()\n      reader.readAsDataURL(acceptedFiles[0])\n      reader.onload = () =>\n        onDrop({ name: acceptedFiles[0].name, content: reader.result as string })\n    },\n  })\n\n  return (\n    <section className='container flex justify-center items-center'>\n      <div {...getRootProps({ style })}>\n        <input {...getInputProps()} />\n        <p style={{ textAlign: 'center', fontSize: '18px' }}>\n          Drag & drop file (supported file formats: {accepted.join(', ')})\n        </p>\n      </div>\n    </section>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,eAAe,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,MAAMC,KAAK,GAAG;EACZC,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBC,UAAU,EAAE,QAAQ;EACpBC,OAAO,EAAE,MAAM;EACfC,WAAW,EAAE,CAAC;EACdC,YAAY,EAAE,EAAE;EAChBC,WAAW,EAAE,SAAS;EACtBC,WAAW,EAAE,QAAQ;EACrBC,eAAe,EAAE,SAAS;EAC1BC,OAAO,EAAE,MAAM;EACfC,UAAU,EAAE,yBAAyB;EACrCC,KAAK,EAAE;EACP;AACF,CAAQ;;AAQR,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAAmD;EAAAC,EAAA;EAAA,IAAlD;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAwB,CAAC,GAAAJ,IAAA;EACpE,MAAM;IAAEK,YAAY;IAAEC;EAAc,CAAC,GAAGxB,WAAW,CAAC;IAClDyB,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAE,KAAK;IACfC,MAAM,EAAE;MACN,CAAE,GAAEL,QAAQ,CAACM,WAAW,CAAC,CAAE,IAAG,GAAGR;IACnC,CAAC;IACDC,MAAM,EAAEA,CAACQ,aAAa,EAAEC,cAAc,KAAK;MACzC,IAAIA,cAAc,CAACC,MAAM,GAAG,CAAC,EAAE;QAC7B9B,eAAe,CAAE,2BAA0B6B,cAAc,CAAC,CAAC,CAAC,CAACE,IAAI,CAACC,IAAK,EAAC,EAAE;UACxEC,OAAO,EAAE;QACX,CAAC,CAAC;QACF;MACF;MAEA,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,aAAa,CAACR,aAAa,CAAC,CAAC,CAAC,CAAC;MACtCM,MAAM,CAACG,MAAM,GAAG,MACdjB,MAAM,CAAC;QAAEkB,IAAI,EAAEV,aAAa,CAAC,CAAC,CAAC,CAACU,IAAI;QAAEC,OAAO,EAAEL,MAAM,CAACM;MAAiB,CAAC,CAAC;IAC7E;EACF,CAAC,CAAC;EAEF,oBACEtC,OAAA;IAASuC,SAAS,EAAC,4CAA4C;IAAAC,QAAA,eAC7DxC,OAAA;MAAA,GAASoB,YAAY,CAAC;QAAEnB;MAAM,CAAC,CAAC;MAAAuC,QAAA,gBAC9BxC,OAAA;QAAA,GAAWqB,aAAa,CAAC;MAAC;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9B5C,OAAA;QAAGC,KAAK,EAAE;UAAE4C,SAAS,EAAE,QAAQ;UAAEC,QAAQ,EAAE;QAAO,CAAE;QAAAN,QAAA,GAAC,4CACT,EAACvB,QAAQ,CAAC8B,IAAI,CAAC,IAAI,CAAC,EAAC,GACjE;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAAA5B,EAAA,CAhCYF,QAAQ;EAAA,QACqBjB,WAAW;AAAA;AAAAmD,EAAA,GADxClC,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}