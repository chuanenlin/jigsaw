{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt) {\n    const {\n      gen,\n      schema,\n      it\n    } = cxt;\n    if ((0, util_1.alwaysValidSchema)(it, schema)) {\n      cxt.fail();\n      return;\n    }\n    const valid = gen.name(\"valid\");\n    cxt.subschema({\n      keyword: \"not\",\n      compositeRule: true,\n      createErrors: false,\n      allErrors: false\n    }, valid);\n    cxt.failResult(valid, () => cxt.reset(), () => cxt.error());\n  },\n  error: {\n    message: \"must NOT be valid\"\n  }\n};\nexports.default = def;","map":{"version":3,"names":["util_1","require","def","keyword","schemaType","trackErrors","code","cxt","gen","schema","it","alwaysValidSchema","fail","valid","name","subschema","compositeRule","createErrors","allErrors","failResult","reset","error","message","exports","default"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/node_modules/ajv/lib/vocabularies/applicator/not.ts"],"sourcesContent":["import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n"],"mappings":";;;;;AAEA,MAAAA,MAAA,GAAAC,OAAA;AAIA,MAAMC,GAAG,GAA0B;EACjCC,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;EACjCC,WAAW,EAAE,IAAI;EACjBC,IAAIA,CAACC,GAAe;IAClB,MAAM;MAACC,GAAG;MAAEC,MAAM;MAAEC;IAAE,CAAC,GAAGH,GAAG;IAC7B,IAAI,IAAAP,MAAA,CAAAW,iBAAiB,EAACD,EAAE,EAAED,MAAM,CAAC,EAAE;MACjCF,GAAG,CAACK,IAAI,EAAE;MACV;;IAGF,MAAMC,KAAK,GAAGL,GAAG,CAACM,IAAI,CAAC,OAAO,CAAC;IAC/BP,GAAG,CAACQ,SAAS,CACX;MACEZ,OAAO,EAAE,KAAK;MACda,aAAa,EAAE,IAAI;MACnBC,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAE;KACZ,EACDL,KAAK,CACN;IAEDN,GAAG,CAACY,UAAU,CACZN,KAAK,EACL,MAAMN,GAAG,CAACa,KAAK,EAAE,EACjB,MAAMb,GAAG,CAACc,KAAK,EAAE,CAClB;EACH,CAAC;EACDA,KAAK,EAAE;IAACC,OAAO,EAAE;EAAmB;CACrC;AAEDC,OAAA,CAAAC,OAAA,GAAetB,GAAG"},"metadata":{},"sourceType":"script","externalDependencies":[]}