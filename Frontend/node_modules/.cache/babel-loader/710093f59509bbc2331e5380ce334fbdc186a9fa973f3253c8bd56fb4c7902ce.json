{"ast":null,"code":"var _jsxFileName = \"/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/atoms/CenteredTextField.tsx\",\n  _s = $RefreshSig$();\nimport { TextField } from '@mui/material';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CenteredTextField = props => {\n  _s();\n  const [overflow, setOverflow] = useState(false);\n  const textFieldRef = useRef(null);\n  const detectOverflow = () => {\n    const element = textFieldRef.current;\n    if (!element) {\n      return;\n    }\n    const isOverflowing = element.scrollHeight > element.clientHeight;\n    setOverflow(isOverflowing);\n    if (isOverflowing) {\n      element.scrollTop = element.scrollHeight;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    ...props,\n    inputProps: {\n      style: {\n        textAlign: 'center',\n        overflow: 'auto'\n      }\n    },\n    ref: textFieldRef,\n    InputProps: {\n      disableUnderline: true\n    },\n    minRows: 1,\n    onChange: event => {\n      var _props$onChange;\n      detectOverflow();\n      (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call(props, event);\n    },\n    sx: {\n      '& .MuiInputBase-input.Mui-disabled': {\n        WebkitTextFillColor: '#000000'\n      },\n      '&.MuiFormControl-root': {\n        height: '100%'\n      },\n      '& .MuiInputBase-root': {\n        display: 'flex',\n        alignItems: overflow ? 'flex-start' : 'center',\n        // Align text to top when overflowing\n        height: '100%' // Adjust the height as required\n      }\n    },\n\n    variant: \"standard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CenteredTextField, \"dMJV0LZWv8/T4ho+GBBs1Tg/IWw=\");\n_c = CenteredTextField;\nvar _c;\n$RefreshReg$(_c, \"CenteredTextField\");","map":{"version":3,"names":["TextField","useRef","useState","jsxDEV","_jsxDEV","CenteredTextField","props","_s","overflow","setOverflow","textFieldRef","detectOverflow","element","current","isOverflowing","scrollHeight","clientHeight","scrollTop","inputProps","style","textAlign","ref","InputProps","disableUnderline","minRows","onChange","event","_props$onChange","call","sx","WebkitTextFillColor","height","display","alignItems","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/atoms/CenteredTextField.tsx"],"sourcesContent":["import { TextField, TextFieldProps } from '@mui/material'\nimport { useRef, useState } from 'react'\n\ntype CenteredTextField = TextFieldProps\n\nexport const CenteredTextField = (props: CenteredTextField) => {\n  const [overflow, setOverflow] = useState(false)\n  const textFieldRef = useRef<HTMLDivElement>(null)\n\n  const detectOverflow = () => {\n    const element = textFieldRef.current\n\n    if (!element) {\n      return\n    }\n\n    const isOverflowing = element.scrollHeight > element.clientHeight\n    setOverflow(isOverflowing)\n\n    if (isOverflowing) {\n      element.scrollTop = element.scrollHeight\n    }\n  }\n\n  return (\n    <TextField\n      {...props}\n      inputProps={{ style: { textAlign: 'center', overflow: 'auto' } }}\n      ref={textFieldRef}\n      InputProps={{ disableUnderline: true }}\n      minRows={1}\n      onChange={(event) => {\n        detectOverflow()\n        props.onChange?.(event)\n      }}\n      sx={{\n        '& .MuiInputBase-input.Mui-disabled': {\n          WebkitTextFillColor: '#000000',\n        },\n        '&.MuiFormControl-root': {\n          height: '100%',\n        },\n\n        '& .MuiInputBase-root': {\n          display: 'flex',\n          alignItems: overflow ? 'flex-start' : 'center', // Align text to top when overflowing\n          height: '100%', // Adjust the height as required\n        },\n      }}\n      variant='standard'\n    />\n  )\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAwB,eAAe;AACzD,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIxC,OAAO,MAAMC,iBAAiB,GAAIC,KAAwB,IAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMQ,YAAY,GAAGT,MAAM,CAAiB,IAAI,CAAC;EAEjD,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,OAAO,GAAGF,YAAY,CAACG,OAAO;IAEpC,IAAI,CAACD,OAAO,EAAE;MACZ;IACF;IAEA,MAAME,aAAa,GAAGF,OAAO,CAACG,YAAY,GAAGH,OAAO,CAACI,YAAY;IACjEP,WAAW,CAACK,aAAa,CAAC;IAE1B,IAAIA,aAAa,EAAE;MACjBF,OAAO,CAACK,SAAS,GAAGL,OAAO,CAACG,YAAY;IAC1C;EACF,CAAC;EAED,oBACEX,OAAA,CAACJ,SAAS;IAAA,GACJM,KAAK;IACTY,UAAU,EAAE;MAAEC,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEZ,QAAQ,EAAE;MAAO;IAAE,CAAE;IACjEa,GAAG,EAAEX,YAAa;IAClBY,UAAU,EAAE;MAAEC,gBAAgB,EAAE;IAAK,CAAE;IACvCC,OAAO,EAAE,CAAE;IACXC,QAAQ,EAAGC,KAAK,IAAK;MAAA,IAAAC,eAAA;MACnBhB,cAAc,CAAC,CAAC;MAChB,CAAAgB,eAAA,GAAArB,KAAK,CAACmB,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAAC,IAAA,CAAAtB,KAAK,EAAYoB,KAAK,CAAC;IACzB,CAAE;IACFG,EAAE,EAAE;MACF,oCAAoC,EAAE;QACpCC,mBAAmB,EAAE;MACvB,CAAC;MACD,uBAAuB,EAAE;QACvBC,MAAM,EAAE;MACV,CAAC;MAED,sBAAsB,EAAE;QACtBC,OAAO,EAAE,MAAM;QACfC,UAAU,EAAEzB,QAAQ,GAAG,YAAY,GAAG,QAAQ;QAAE;QAChDuB,MAAM,EAAE,MAAM,CAAE;MAClB;IACF,CAAE;;IACFG,OAAO,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEN,CAAC;AAAA/B,EAAA,CA/CYF,iBAAiB;AAAAkC,EAAA,GAAjBlC,iBAAiB;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}