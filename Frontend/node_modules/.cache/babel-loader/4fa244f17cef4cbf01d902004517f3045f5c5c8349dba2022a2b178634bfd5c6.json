{"ast":null,"code":"var _jsxFileName = \"/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/context/TooltipContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TooltipContext = /*#__PURE__*/createContext(undefined);\nexport const useTooltipContext = () => {\n  _s();\n  return useContext(TooltipContext);\n};\n_s(useTooltipContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const TooltipContextProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [tooltipInfo, setTooltipInfo] = useState();\n  return /*#__PURE__*/_jsxDEV(TooltipContext.Provider, {\n    value: {\n      setTooltipInfo,\n      tooltipInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s2(TooltipContextProvider, \"+c3ugcIr4Wyqf7Algpv/vYSr13U=\");\n_c = TooltipContextProvider;\nvar _c;\n$RefreshReg$(_c, \"TooltipContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","TooltipContext","undefined","useTooltipContext","_s","TooltipContextProvider","_ref","_s2","children","tooltipInfo","setTooltipInfo","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/context/TooltipContext.tsx"],"sourcesContent":["import { BlockSvg } from 'blockly/core'\nimport { createContext, PropsWithChildren, useContext, useState } from 'react'\n\nexport interface TooltipInfo {\n  blockSvg?: BlockSvg\n  event?: MouseEvent\n  tooltipHovered?: boolean\n}\n\nexport interface TooltipContextProps {\n  tooltipInfo?: TooltipInfo\n  setTooltipInfo: (tooltipInfo?: TooltipInfo) => void\n}\n\nexport const TooltipContext = createContext<TooltipContextProps | undefined>(undefined)\n\nexport const useTooltipContext = () => useContext(TooltipContext) as TooltipContextProps\n\nexport const TooltipContextProvider = ({ children }: PropsWithChildren) => {\n  const [tooltipInfo, setTooltipInfo] = useState<TooltipInfo>()\n\n  return (\n    <TooltipContext.Provider\n      value={{\n        setTooltipInfo,\n        tooltipInfo,\n      }}\n    >\n      {children}\n    </TooltipContext.Provider>\n  )\n}\n"],"mappings":";;;AACA,SAASA,aAAa,EAAqBC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAa9E,OAAO,MAAMC,cAAc,gBAAGL,aAAa,CAAkCM,SAAS,CAAC;AAEvF,OAAO,MAAMC,iBAAiB,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACI,cAAc,CAAC;AAAA,CAAuB;AAAAG,EAAA,CAA3ED,iBAAiB;AAE9B,OAAO,MAAME,sBAAsB,GAAGC,IAAA,IAAqC;EAAAC,GAAA;EAAA,IAApC;IAAEC;EAA4B,CAAC,GAAAF,IAAA;EACpE,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAc,CAAC;EAE7D,oBACEE,OAAA,CAACC,cAAc,CAACU,QAAQ;IACtBC,KAAK,EAAE;MACLF,cAAc;MACdD;IACF,CAAE;IAAAD,QAAA,EAEDA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAAAT,GAAA,CAbYF,sBAAsB;AAAAY,EAAA,GAAtBZ,sBAAsB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}