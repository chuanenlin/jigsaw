{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Toolbox category with styling for continuous toolbox.\n */\n\nimport * as Blockly from 'blockly/core';\n\n/** Toolbox category for continuous toolbox. */\nexport class ContinuousCategory extends Blockly.ToolboxCategory {\n  /**\n   * Constructor for ContinuousCategory which is used in ContinuousToolbox.\n   * @override\n   */\n  constructor(categoryDef, toolbox) {\n    super(categoryDef, toolbox);\n  }\n\n  /** @override */\n  createLabelDom_(name) {\n    const label = document.createElement('div');\n    label.setAttribute('id', this.getId() + '.label');\n    label.textContent = name;\n    label.classList.add(this.cssConfig_['label']);\n    return label;\n  }\n\n  /** @override */\n  createIconDom_() {\n    const icon = document.createElement('div');\n    icon.classList.add('categoryBubble');\n    icon.style.backgroundColor = this.colour_;\n    return icon;\n  }\n\n  /** @override */\n  addColourBorder_() {\n    // No-op\n  }\n\n  /** @override */\n  setSelected(isSelected) {\n    if (isSelected) {\n      this.rowDiv_.style.backgroundColor = 'gray';\n      Blockly.utils.dom.addClass(this.rowDiv_, this.cssConfig_['selected']);\n    } else {\n      this.rowDiv_.style.backgroundColor = '';\n      Blockly.utils.dom.removeClass(this.rowDiv_, this.cssConfig_['selected']);\n    }\n    Blockly.utils.aria.setState( /** @type {!Element} */this.htmlDiv_, Blockly.utils.aria.State.SELECTED, isSelected);\n  }\n}\nBlockly.registry.register(Blockly.registry.Type.TOOLBOX_ITEM, Blockly.ToolboxCategory.registrationName, ContinuousCategory, true);","map":{"version":3,"names":["Blockly","ContinuousCategory","ToolboxCategory","constructor","categoryDef","toolbox","createLabelDom_","name","label","document","createElement","setAttribute","getId","textContent","classList","add","cssConfig_","createIconDom_","icon","style","backgroundColor","colour_","addColourBorder_","setSelected","isSelected","rowDiv_","utils","dom","addClass","removeClass","aria","setState","htmlDiv_","State","SELECTED","registry","register","Type","TOOLBOX_ITEM","registrationName"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/blockly/continuous-toolbox/ContinuousCategory.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Toolbox category with styling for continuous toolbox.\n */\n\nimport * as Blockly from 'blockly/core'\n\n/** Toolbox category for continuous toolbox. */\nexport class ContinuousCategory extends Blockly.ToolboxCategory {\n  /**\n   * Constructor for ContinuousCategory which is used in ContinuousToolbox.\n   * @override\n   */\n  constructor(categoryDef, toolbox) {\n    super(categoryDef, toolbox)\n  }\n\n  /** @override */\n  createLabelDom_(name) {\n    const label = document.createElement('div')\n    label.setAttribute('id', this.getId() + '.label')\n    label.textContent = name\n    label.classList.add(this.cssConfig_['label'])\n    return label\n  }\n\n  /** @override */\n  createIconDom_() {\n    const icon = document.createElement('div')\n    icon.classList.add('categoryBubble')\n    icon.style.backgroundColor = this.colour_\n    return icon\n  }\n\n  /** @override */\n  addColourBorder_() {\n    // No-op\n  }\n\n  /** @override */\n  setSelected(isSelected) {\n    if (isSelected) {\n      this.rowDiv_.style.backgroundColor = 'gray'\n      Blockly.utils.dom.addClass(this.rowDiv_, this.cssConfig_['selected'])\n    } else {\n      this.rowDiv_.style.backgroundColor = ''\n      Blockly.utils.dom.removeClass(this.rowDiv_, this.cssConfig_['selected'])\n    }\n    Blockly.utils.aria.setState(\n      /** @type {!Element} */ (this.htmlDiv_),\n      Blockly.utils.aria.State.SELECTED,\n      isSelected,\n    )\n  }\n}\n\nBlockly.registry.register(\n  Blockly.registry.Type.TOOLBOX_ITEM,\n  Blockly.ToolboxCategory.registrationName,\n  ContinuousCategory,\n  true,\n)\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO,KAAKA,OAAO,MAAM,cAAc;;AAEvC;AACA,OAAO,MAAMC,kBAAkB,SAASD,OAAO,CAACE,eAAe,CAAC;EAC9D;AACF;AACA;AACA;EACEC,WAAWA,CAACC,WAAW,EAAEC,OAAO,EAAE;IAChC,KAAK,CAACD,WAAW,EAAEC,OAAO,CAAC;EAC7B;;EAEA;EACAC,eAAeA,CAACC,IAAI,EAAE;IACpB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC3CF,KAAK,CAACG,YAAY,CAAC,IAAI,EAAE,IAAI,CAACC,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC;IACjDJ,KAAK,CAACK,WAAW,GAAGN,IAAI;IACxBC,KAAK,CAACM,SAAS,CAACC,GAAG,CAAC,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC7C,OAAOR,KAAK;EACd;;EAEA;EACAS,cAAcA,CAAA,EAAG;IACf,MAAMC,IAAI,GAAGT,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IAC1CQ,IAAI,CAACJ,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;IACpCG,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,IAAI,CAACC,OAAO;IACzC,OAAOH,IAAI;EACb;;EAEA;EACAI,gBAAgBA,CAAA,EAAG;IACjB;EAAA;;EAGF;EACAC,WAAWA,CAACC,UAAU,EAAE;IACtB,IAAIA,UAAU,EAAE;MACd,IAAI,CAACC,OAAO,CAACN,KAAK,CAACC,eAAe,GAAG,MAAM;MAC3CpB,OAAO,CAAC0B,KAAK,CAACC,GAAG,CAACC,QAAQ,CAAC,IAAI,CAACH,OAAO,EAAE,IAAI,CAACT,UAAU,CAAC,UAAU,CAAC,CAAC;IACvE,CAAC,MAAM;MACL,IAAI,CAACS,OAAO,CAACN,KAAK,CAACC,eAAe,GAAG,EAAE;MACvCpB,OAAO,CAAC0B,KAAK,CAACC,GAAG,CAACE,WAAW,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAACT,UAAU,CAAC,UAAU,CAAC,CAAC;IAC1E;IACAhB,OAAO,CAAC0B,KAAK,CAACI,IAAI,CAACC,QAAQ,EACzB,uBAAyB,IAAI,CAACC,QAAQ,EACtChC,OAAO,CAAC0B,KAAK,CAACI,IAAI,CAACG,KAAK,CAACC,QAAQ,EACjCV,UACF,CAAC;EACH;AACF;AAEAxB,OAAO,CAACmC,QAAQ,CAACC,QAAQ,CACvBpC,OAAO,CAACmC,QAAQ,CAACE,IAAI,CAACC,YAAY,EAClCtC,OAAO,CAACE,eAAe,CAACqC,gBAAgB,EACxCtC,kBAAkB,EAClB,IACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}