{"ast":null,"code":"import clone from 'lodash/clone';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport noop from 'lodash/noop';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport { BaseForm } from './BaseForm';\nexport function Validated(Base) {\n  // @ts-expect-error: Mixin class problem.\n  class ValidatedForm extends Base {\n    constructor(props) {\n      super(props);\n      this.state = Object.assign(Object.assign({}, this.state), {\n        error: null,\n        validate: false,\n        validating: false,\n        validator: this.getContextSchema().getValidator(props.validator)\n      });\n      this.onValidate = this.validate = this.onValidate.bind(this);\n      this.onValidateModel = this.validateModel = this.onValidateModel.bind(this);\n    }\n    getContextError() {\n      var _a;\n      return (_a = super.getContextError()) !== null && _a !== void 0 ? _a : this.state.error;\n    }\n    getContext() {\n      return Object.assign(Object.assign({}, super.getContext()), {\n        validating: this.state.validating\n      });\n    }\n    getNativeFormProps() {\n      const props = super.getNativeFormProps();\n      return omit(props, ['onValidate', 'validate', 'validator']);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n      super.componentDidUpdate(prevProps, prevState, snapshot);\n      const {\n        model,\n        schema,\n        validate,\n        validator\n      } = this.props;\n      if (schema !== prevProps.schema || validator !== prevProps.validator) {\n        this.setState({\n          validator: schema.getValidator(validator)\n        }, () => {\n          if (shouldRevalidate(validate, this.state.validate)) {\n            this.onValidate();\n          }\n        });\n      } else if (!isEqual(model, prevProps.model) && shouldRevalidate(validate, this.state.validate)) {\n        this.onValidateModel(model);\n      }\n    }\n    onChange(key, value) {\n      if (shouldRevalidate(this.props.validate, this.state.validate)) {\n        this.onValidate(key, value);\n      }\n      super.onChange(key, value);\n    }\n    __reset(state) {\n      return Object.assign(Object.assign({}, super.__reset(state)), {\n        error: null,\n        validate: false,\n        validating: false\n      });\n    }\n    onSubmit(event) {\n      if (event) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      this.setState({\n        submitted: true,\n        validate: true\n      });\n      const result = this.onValidate().then(error => {\n        if (error !== null) {\n          return Promise.reject(error);\n        }\n        // Validation failed (i.e. returned an error), so no error is present\n        // both in the props nor the state.\n        return super.onSubmit().catch(error => {\n          this.setState({\n            error\n          });\n          throw error;\n        });\n      });\n      result.catch(noop);\n      return result;\n    }\n    onValidate(key, value) {\n      let model = this.getContextModel();\n      if (model && key) {\n        model = setWith(clone(model), key, cloneDeep(value), clone);\n      }\n      return this.onValidateModel(model);\n    }\n    onValidateModel(originalModel) {\n      var _this = this;\n      const model = this.getModel('validate', originalModel);\n      // Using `then` allows using the same code for both synchronous and\n      // asynchronous cases. We could use `await` here, but it would make all\n      // calls asynchronous, unnecessary delaying synchronous validation.\n      const then = makeThen(() => {\n        this.setState({\n          validating: true\n        });\n      });\n      return then(this.state.validator(model), function () {\n        let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        return then(_this.props.onValidate(model, error), function () {\n          let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n          var _a;\n          // Do not copy the error from props to the state.\n          error = _this.props.error === error ? null : error;\n          // If the whole operation was synchronous and resulted in the same\n          // error, we can skip the re-render.\n          _this.setState(state => state.error === error && !state.validating ? null : {\n            error,\n            validating: false\n          });\n          // A predefined error takes precedence over the validation one.\n          return Promise.resolve((_a = _this.props.error) !== null && _a !== void 0 ? _a : error);\n        });\n      });\n    }\n  }\n  ValidatedForm.Validated = Validated;\n  ValidatedForm.displayName = `Validated${Base.displayName}`;\n  ValidatedForm.defaultProps = Object.assign(Object.assign({}, Base.defaultProps), {\n    onValidate(model, error) {\n      return error;\n    },\n    validate: 'onChangeAfterSubmit'\n  });\n  return ValidatedForm;\n}\nfunction makeThen(callIfAsync) {\n  function then(value, fn) {\n    if (value instanceof Promise) {\n      callIfAsync();\n      return value.then(fn);\n    }\n    return fn(value);\n  }\n  return then;\n}\nfunction shouldRevalidate(inProps, inState) {\n  return inProps === 'onChange' || inProps === 'onChangeAfterSubmit' && inState;\n}\nexport const ValidatedForm = Validated(BaseForm);","map":{"version":3,"names":["clone","cloneDeep","isEqual","noop","omit","setWith","BaseForm","Validated","Base","ValidatedForm","constructor","props","state","Object","assign","error","validate","validating","validator","getContextSchema","getValidator","onValidate","bind","onValidateModel","validateModel","getContextError","_a","getContext","getNativeFormProps","componentDidUpdate","prevProps","prevState","snapshot","model","schema","setState","shouldRevalidate","onChange","key","value","__reset","onSubmit","event","preventDefault","stopPropagation","submitted","result","then","Promise","reject","catch","getContextModel","originalModel","_this","getModel","makeThen","arguments","length","undefined","resolve","displayName","defaultProps","callIfAsync","fn","inProps","inState"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/node_modules/uniforms/esm/ValidatedForm.js"],"sourcesContent":["import clone from 'lodash/clone';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isEqual from 'lodash/isEqual';\nimport noop from 'lodash/noop';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport { BaseForm } from './BaseForm';\nexport function Validated(Base) {\n    // @ts-expect-error: Mixin class problem.\n    class ValidatedForm extends Base {\n        constructor(props) {\n            super(props);\n            this.state = Object.assign(Object.assign({}, this.state), { error: null, validate: false, validating: false, validator: this.getContextSchema().getValidator(props.validator) });\n            this.onValidate = this.validate = this.onValidate.bind(this);\n            this.onValidateModel = this.validateModel =\n                this.onValidateModel.bind(this);\n        }\n        getContextError() {\n            var _a;\n            return (_a = super.getContextError()) !== null && _a !== void 0 ? _a : this.state.error;\n        }\n        getContext() {\n            return Object.assign(Object.assign({}, super.getContext()), { validating: this.state.validating });\n        }\n        getNativeFormProps() {\n            const props = super.getNativeFormProps();\n            return omit(props, [\n                'onValidate',\n                'validate',\n                'validator',\n            ]);\n        }\n        componentDidUpdate(prevProps, prevState, snapshot) {\n            super.componentDidUpdate(prevProps, prevState, snapshot);\n            const { model, schema, validate, validator } = this.props;\n            if (schema !== prevProps.schema || validator !== prevProps.validator) {\n                this.setState({ validator: schema.getValidator(validator) }, () => {\n                    if (shouldRevalidate(validate, this.state.validate)) {\n                        this.onValidate();\n                    }\n                });\n            }\n            else if (!isEqual(model, prevProps.model) &&\n                shouldRevalidate(validate, this.state.validate)) {\n                this.onValidateModel(model);\n            }\n        }\n        onChange(key, value) {\n            if (shouldRevalidate(this.props.validate, this.state.validate)) {\n                this.onValidate(key, value);\n            }\n            super.onChange(key, value);\n        }\n        __reset(state) {\n            return Object.assign(Object.assign({}, super.__reset(state)), { error: null, validate: false, validating: false });\n        }\n        onSubmit(event) {\n            if (event) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            this.setState({ submitted: true, validate: true });\n            const result = this.onValidate().then(error => {\n                if (error !== null) {\n                    return Promise.reject(error);\n                }\n                // Validation failed (i.e. returned an error), so no error is present\n                // both in the props nor the state.\n                return super.onSubmit().catch(error => {\n                    this.setState({ error });\n                    throw error;\n                });\n            });\n            result.catch(noop);\n            return result;\n        }\n        onValidate(key, value) {\n            let model = this.getContextModel();\n            if (model && key) {\n                model = setWith(clone(model), key, cloneDeep(value), clone);\n            }\n            return this.onValidateModel(model);\n        }\n        onValidateModel(originalModel) {\n            const model = this.getModel('validate', originalModel);\n            // Using `then` allows using the same code for both synchronous and\n            // asynchronous cases. We could use `await` here, but it would make all\n            // calls asynchronous, unnecessary delaying synchronous validation.\n            const then = makeThen(() => {\n                this.setState({ validating: true });\n            });\n            return then(this.state.validator(model), (error = null) => then(this.props.onValidate(model, error), (error = null) => {\n                var _a;\n                // Do not copy the error from props to the state.\n                error = this.props.error === error ? null : error;\n                // If the whole operation was synchronous and resulted in the same\n                // error, we can skip the re-render.\n                this.setState(state => state.error === error && !state.validating\n                    ? null\n                    : { error, validating: false });\n                // A predefined error takes precedence over the validation one.\n                return Promise.resolve((_a = this.props.error) !== null && _a !== void 0 ? _a : error);\n            }));\n        }\n    }\n    ValidatedForm.Validated = Validated;\n    ValidatedForm.displayName = `Validated${Base.displayName}`;\n    ValidatedForm.defaultProps = Object.assign(Object.assign({}, Base.defaultProps), { onValidate(model, error) {\n            return error;\n        }, validate: 'onChangeAfterSubmit' });\n    return ValidatedForm;\n}\nfunction makeThen(callIfAsync) {\n    function then(value, fn) {\n        if (value instanceof Promise) {\n            callIfAsync();\n            return value.then(fn);\n        }\n        return fn(value);\n    }\n    return then;\n}\nfunction shouldRevalidate(inProps, inState) {\n    return (inProps === 'onChange' || (inProps === 'onChangeAfterSubmit' && inState));\n}\nexport const ValidatedForm = Validated(BaseForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}