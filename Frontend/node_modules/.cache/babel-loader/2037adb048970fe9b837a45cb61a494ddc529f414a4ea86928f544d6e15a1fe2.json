{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as Blockly from 'blockly/core';\nimport { useCallback } from 'react';\nimport { useTooltipContext } from '../context/TooltipContext';\nexport const useTooltip = () => {\n  _s();\n  const {\n    tooltipInfo,\n    setTooltipInfo\n  } = useTooltipContext();\n  const setupTooltipListeners = useCallback(workspace => {\n    if (!workspace) return;\n    Blockly.Tooltip.HOVER_MS = 400; // Reduce hover time to 400ms\n\n    workspace.addChangeListener(event => {\n      if (event.type === Blockly.Events.BLOCK_MOVE) {\n        const block = workspace.getBlockById(event.blockId);\n        if (!block || !block.data) return;\n        const tooltipContent = createTooltipContent(block);\n        block.setTooltip(() => tooltipContent);\n      }\n    });\n  }, []);\n  return {\n    setupTooltipListeners\n  };\n};\n_s(useTooltip, \"Dw2M/BS5Q26FBZ+hOI11aEfUfPw=\", false, function () {\n  return [useTooltipContext];\n});","map":{"version":3,"names":["Blockly","useCallback","useTooltipContext","useTooltip","_s","tooltipInfo","setTooltipInfo","setupTooltipListeners","workspace","Tooltip","HOVER_MS","addChangeListener","event","type","Events","BLOCK_MOVE","block","getBlockById","blockId","data","tooltipContent","createTooltipContent","setTooltip"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/hooks/useTooltip.ts"],"sourcesContent":["import * as Blockly from 'blockly/core';\nimport { useCallback } from 'react';\nimport { useTooltipContext } from '../context/TooltipContext';\n\nexport const useTooltip = () => {\n  const { tooltipInfo, setTooltipInfo } = useTooltipContext();\n\n  const setupTooltipListeners = useCallback((workspace: Blockly.WorkspaceSvg | undefined) => {\n    if (!workspace) return;\n    \n    Blockly.Tooltip.HOVER_MS = 400; // Reduce hover time to 400ms\n    \n    workspace.addChangeListener((event: Blockly.Events.Abstract) => {\n      if (event.type === Blockly.Events.BLOCK_MOVE) {\n        const block = workspace.getBlockById((event as Blockly.Events.BlockMove).blockId);\n        if (!block || !block.data) return;\n        \n        const tooltipContent = createTooltipContent(block);\n        block.setTooltip(() => tooltipContent);\n      }\n    });\n  }, []);\n\n  return { setupTooltipListeners };\n};\n"],"mappings":";AAAA,OAAO,KAAKA,OAAO,MAAM,cAAc;AACvC,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,iBAAiB,QAAQ,2BAA2B;AAE7D,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGJ,iBAAiB,CAAC,CAAC;EAE3D,MAAMK,qBAAqB,GAAGN,WAAW,CAAEO,SAA2C,IAAK;IACzF,IAAI,CAACA,SAAS,EAAE;IAEhBR,OAAO,CAACS,OAAO,CAACC,QAAQ,GAAG,GAAG,CAAC,CAAC;;IAEhCF,SAAS,CAACG,iBAAiB,CAAEC,KAA8B,IAAK;MAC9D,IAAIA,KAAK,CAACC,IAAI,KAAKb,OAAO,CAACc,MAAM,CAACC,UAAU,EAAE;QAC5C,MAAMC,KAAK,GAAGR,SAAS,CAACS,YAAY,CAAEL,KAAK,CAA8BM,OAAO,CAAC;QACjF,IAAI,CAACF,KAAK,IAAI,CAACA,KAAK,CAACG,IAAI,EAAE;QAE3B,MAAMC,cAAc,GAAGC,oBAAoB,CAACL,KAAK,CAAC;QAClDA,KAAK,CAACM,UAAU,CAAC,MAAMF,cAAc,CAAC;MACxC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEb;EAAsB,CAAC;AAClC,CAAC;AAACH,EAAA,CApBWD,UAAU;EAAA,QACmBD,iBAAiB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}