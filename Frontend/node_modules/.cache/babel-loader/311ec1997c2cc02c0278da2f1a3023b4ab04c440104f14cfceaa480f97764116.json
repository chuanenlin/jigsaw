{"ast":null,"code":"import { __rest } from \"tslib\";\nimport TextField from '@mui/material/TextField';\nimport React from 'react';\nimport { connectField, filterDOMProps } from 'uniforms';\n/* istanbul ignore next */\nconst DateConstructor = (typeof global === 'object' ? global : window).Date;\nconst dateFormat = function (value) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'datetime-local';\n  return value === null || value === void 0 ? void 0 : value.toISOString().slice(0, type === 'datetime-local' ? -8 : -14);\n};\nconst dateParse = (timestamp, onChange) => {\n  const date = new DateConstructor(timestamp);\n  if (date.getFullYear() < 10000) {\n    onChange(date);\n  } else if (isNaN(timestamp)) {\n    onChange(undefined);\n  }\n};\nfunction Date(_a) {\n  var _b;\n  var {\n      disabled,\n      error,\n      errorMessage,\n      helperText,\n      InputLabelProps,\n      inputRef,\n      label,\n      labelProps,\n      max,\n      min,\n      name,\n      onChange,\n      placeholder,\n      readOnly,\n      showInlineError,\n      value,\n      type = 'datetime-local'\n    } = _a,\n    props = __rest(_a, [\"disabled\", \"error\", \"errorMessage\", \"helperText\", \"InputLabelProps\", \"inputRef\", \"label\", \"labelProps\", \"max\", \"min\", \"name\", \"onChange\", \"placeholder\", \"readOnly\", \"showInlineError\", \"value\", \"type\"]);\n  return React.createElement(TextField, Object.assign({\n    disabled: disabled,\n    error: !!error,\n    fullWidth: true,\n    helperText: !!error && showInlineError && errorMessage || helperText,\n    label: label,\n    InputLabelProps: Object.assign(Object.assign({\n      shrink: true\n    }, labelProps), InputLabelProps),\n    inputProps: Object.assign({\n      max: dateFormat(max),\n      min: dateFormat(min),\n      readOnly\n    }, props.inputProps),\n    margin: \"dense\",\n    name: name,\n    onChange: event =>\n    // FIXME: `valueAsNumber` is not available in `EventTarget`.\n    disabled || dateParse(event.target.valueAsNumber, onChange),\n    placeholder: placeholder,\n    ref: inputRef,\n    type: type,\n    value: (_b = dateFormat(value, type)) !== null && _b !== void 0 ? _b : ''\n  }, filterDOMProps(props)));\n}\nexport default connectField(Date, {\n  kind: 'leaf'\n});","map":{"version":3,"names":["__rest","TextField","React","connectField","filterDOMProps","DateConstructor","global","window","Date","dateFormat","value","type","arguments","length","undefined","toISOString","slice","dateParse","timestamp","onChange","date","getFullYear","isNaN","_a","_b","disabled","error","errorMessage","helperText","InputLabelProps","inputRef","label","labelProps","max","min","name","placeholder","readOnly","showInlineError","props","createElement","Object","assign","fullWidth","shrink","inputProps","margin","event","target","valueAsNumber","ref","kind"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/node_modules/uniforms-mui/esm/DateField.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport TextField from '@mui/material/TextField';\nimport React from 'react';\nimport { connectField, filterDOMProps } from 'uniforms';\n/* istanbul ignore next */\nconst DateConstructor = (typeof global === 'object' ? global : window).Date;\nconst dateFormat = (value, type = 'datetime-local') => value === null || value === void 0 ? void 0 : value.toISOString().slice(0, type === 'datetime-local' ? -8 : -14);\nconst dateParse = (timestamp, onChange) => {\n    const date = new DateConstructor(timestamp);\n    if (date.getFullYear() < 10000) {\n        onChange(date);\n    }\n    else if (isNaN(timestamp)) {\n        onChange(undefined);\n    }\n};\nfunction Date(_a) {\n    var _b;\n    var { disabled, error, errorMessage, helperText, InputLabelProps, inputRef, label, labelProps, max, min, name, onChange, placeholder, readOnly, showInlineError, value, type = 'datetime-local' } = _a, props = __rest(_a, [\"disabled\", \"error\", \"errorMessage\", \"helperText\", \"InputLabelProps\", \"inputRef\", \"label\", \"labelProps\", \"max\", \"min\", \"name\", \"onChange\", \"placeholder\", \"readOnly\", \"showInlineError\", \"value\", \"type\"]);\n    return (React.createElement(TextField, Object.assign({ disabled: disabled, error: !!error, fullWidth: true, helperText: (!!error && showInlineError && errorMessage) || helperText, label: label, InputLabelProps: Object.assign(Object.assign({ shrink: true }, labelProps), InputLabelProps), inputProps: Object.assign({ max: dateFormat(max), min: dateFormat(min), readOnly }, props.inputProps), margin: \"dense\", name: name, onChange: event => \n        // FIXME: `valueAsNumber` is not available in `EventTarget`.\n        disabled || dateParse(event.target.valueAsNumber, onChange), placeholder: placeholder, ref: inputRef, type: type, value: (_b = dateFormat(value, type)) !== null && _b !== void 0 ? _b : '' }, filterDOMProps(props))));\n}\nexport default connectField(Date, { kind: 'leaf' });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}