{"ast":null,"code":"const registered = [];\nconst registeredCache = new Set();\nexport const filterDOMProps = Object.assign(function filterDOMProps(props) {\n  const filteredProps = Object.assign({}, props);\n  for (const prop in props) {\n    if (registeredCache.has(prop)) {\n      delete filteredProps[prop];\n    }\n  }\n  return filteredProps;\n}, {\n  register() {\n    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n      props[_key] = arguments[_key];\n    }\n    props.forEach(prop => {\n      if (!registeredCache.has(prop)) {\n        registered.push(prop);\n        registeredCache.add(prop);\n      }\n    });\n    registered.sort();\n  },\n  registered: registered\n});\nfilterDOMProps.register(\n// These props are provided by useField directly.\n'changed', 'error', 'errorMessage', 'field', 'fieldType', 'fields', 'name', 'onChange', 'value',\n// These props are provided by useField through context.state.\n'disabled', 'label', 'placeholder', 'showInlineError',\n// This is used by AutoField.\n'component');","map":{"version":3,"names":["registered","registeredCache","Set","filterDOMProps","Object","assign","props","filteredProps","prop","has","register","_len","arguments","length","Array","_key","forEach","push","add","sort"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/node_modules/uniforms/esm/filterDOMProps.js"],"sourcesContent":["const registered = [];\nconst registeredCache = new Set();\nexport const filterDOMProps = Object.assign(function filterDOMProps(props) {\n    const filteredProps = Object.assign({}, props);\n    for (const prop in props) {\n        if (registeredCache.has(prop)) {\n            delete filteredProps[prop];\n        }\n    }\n    return filteredProps;\n}, {\n    register(...props) {\n        props.forEach(prop => {\n            if (!registeredCache.has(prop)) {\n                registered.push(prop);\n                registeredCache.add(prop);\n            }\n        });\n        registered.sort();\n    },\n    registered: registered,\n});\nfilterDOMProps.register(\n// These props are provided by useField directly.\n'changed', 'error', 'errorMessage', 'field', 'fieldType', 'fields', 'name', 'onChange', 'value', \n// These props are provided by useField through context.state.\n'disabled', 'label', 'placeholder', 'showInlineError', \n// This is used by AutoField.\n'component');\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,EAAE;AACrB,MAAMC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;AACjC,OAAO,MAAMC,cAAc,GAAGC,MAAM,CAACC,MAAM,CAAC,SAASF,cAAcA,CAACG,KAAK,EAAE;EACvE,MAAMC,aAAa,GAAGH,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEC,KAAK,CAAC;EAC9C,KAAK,MAAME,IAAI,IAAIF,KAAK,EAAE;IACtB,IAAIL,eAAe,CAACQ,GAAG,CAACD,IAAI,CAAC,EAAE;MAC3B,OAAOD,aAAa,CAACC,IAAI,CAAC;IAC9B;EACJ;EACA,OAAOD,aAAa;AACxB,CAAC,EAAE;EACCG,QAAQA,CAAA,EAAW;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAPP,KAAK,OAAAQ,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;MAALT,KAAK,CAAAS,IAAA,IAAAH,SAAA,CAAAG,IAAA;IAAA;IACbT,KAAK,CAACU,OAAO,CAACR,IAAI,IAAI;MAClB,IAAI,CAACP,eAAe,CAACQ,GAAG,CAACD,IAAI,CAAC,EAAE;QAC5BR,UAAU,CAACiB,IAAI,CAACT,IAAI,CAAC;QACrBP,eAAe,CAACiB,GAAG,CAACV,IAAI,CAAC;MAC7B;IACJ,CAAC,CAAC;IACFR,UAAU,CAACmB,IAAI,CAAC,CAAC;EACrB,CAAC;EACDnB,UAAU,EAAEA;AAChB,CAAC,CAAC;AACFG,cAAc,CAACO,QAAQ;AACvB;AACA,SAAS,EAAE,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO;AAC/F;AACA,UAAU,EAAE,OAAO,EAAE,aAAa,EAAE,iBAAiB;AACrD;AACA,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}