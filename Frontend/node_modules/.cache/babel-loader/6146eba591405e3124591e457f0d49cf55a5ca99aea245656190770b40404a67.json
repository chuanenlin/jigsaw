{"ast":null,"code":"export const speech2TextParams = {\n  model: {},\n  schema: {\n    type: 'object',\n    properties: {\n      model: {\n        type: 'string',\n        title: 'Model',\n        default: 'large-v2',\n        enum: ['large-v2', 'large'],\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does'\n        }\n      },\n      transcription: {\n        type: 'string',\n        title: 'Transcription',\n        default: 'plain text',\n        enum: ['plain text', 'srt', 'vtt'],\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does'\n        }\n      },\n      translate: {\n        type: 'boolean',\n        title: 'Translate',\n        default: false,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does'\n        }\n      },\n      language: {\n        type: 'string',\n        title: 'Language',\n        default: 'en',\n        enum: ['af', 'am', 'ar', 'as', 'az', 'ba', 'be', 'bg', 'bn', 'bo', 'br', 'bs', 'ca', 'cs', 'cy', 'da', 'de', 'el', 'en', 'es', 'et', 'eu', 'fa', 'fi', 'fo', 'fr', 'gl', 'gu', 'ha', 'haw', 'he', 'hi', 'hr', 'ht', 'hu', 'hy', 'id', 'is', 'it', 'ja', 'jw', 'ka', 'kk', 'km', 'kn', 'ko', 'la', 'lb', 'ln', 'lo', 'lt', 'lv', 'mg', 'mi', 'mk', 'ml', 'mn', 'mr', 'ms', 'mt', 'my', 'ne', 'nl', 'nn', 'no', 'oc', 'pa', 'pl', 'ps', 'pt', 'ro', 'ru', 'sa', 'sd', 'si', 'sk', 'sl', 'sn', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te', 'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'uk', 'ur', 'uz', 'vi', 'yi', 'yo', 'zh'],\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does'\n        }\n      }\n    },\n    required: ['model', 'transcription', 'translate', 'language']\n  }\n};","map":{"version":3,"names":["speech2TextParams","model","schema","type","properties","title","default","enum","uniforms","help","transcription","translate","language","required"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/constants/block-list/speech2text/speech2text.params.ts"],"sourcesContent":["import { JSONSchemaType } from 'ajv'\nimport { BlockParameters } from '../../../types'\n\nexport interface Speech2TextParams {\n  audio: string\n  model: string\n  transcription: string\n  translate: boolean\n  language: string\n}\n\nexport const speech2TextParams: BlockParameters = {\n  model: {},\n  schema: {\n    type: 'object',\n    properties: {\n      model: {\n        type: 'string',\n        title: 'Model',\n        default: 'large-v2',\n        enum: ['large-v2', 'large'],\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does',\n        },\n      },\n      transcription: {\n        type: 'string',\n        title: 'Transcription',\n        default: 'plain text',\n        enum: ['plain text', 'srt', 'vtt'],\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does',\n        },\n      },\n      translate: {\n        type: 'boolean',\n        title: 'Translate',\n        default: false,\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does',\n        },\n      },\n      language: {\n        type: 'string',\n        title: 'Language',\n        default: 'en',\n        enum: [\n          'af',\n          'am',\n          'ar',\n          'as',\n          'az',\n          'ba',\n          'be',\n          'bg',\n          'bn',\n          'bo',\n          'br',\n          'bs',\n          'ca',\n          'cs',\n          'cy',\n          'da',\n          'de',\n          'el',\n          'en',\n          'es',\n          'et',\n          'eu',\n          'fa',\n          'fi',\n          'fo',\n          'fr',\n          'gl',\n          'gu',\n          'ha',\n          'haw',\n          'he',\n          'hi',\n          'hr',\n          'ht',\n          'hu',\n          'hy',\n          'id',\n          'is',\n          'it',\n          'ja',\n          'jw',\n          'ka',\n          'kk',\n          'km',\n          'kn',\n          'ko',\n          'la',\n          'lb',\n          'ln',\n          'lo',\n          'lt',\n          'lv',\n          'mg',\n          'mi',\n          'mk',\n          'ml',\n          'mn',\n          'mr',\n          'ms',\n          'mt',\n          'my',\n          'ne',\n          'nl',\n          'nn',\n          'no',\n          'oc',\n          'pa',\n          'pl',\n          'ps',\n          'pt',\n          'ro',\n          'ru',\n          'sa',\n          'sd',\n          'si',\n          'sk',\n          'sl',\n          'sn',\n          'so',\n          'sq',\n          'sr',\n          'su',\n          'sv',\n          'sw',\n          'ta',\n          'te',\n          'tg',\n          'th',\n          'tk',\n          'tl',\n          'tr',\n          'tt',\n          'uk',\n          'ur',\n          'uz',\n          'vi',\n          'yi',\n          'yo',\n          'zh',\n        ],\n        uniforms: {\n          help: 'Some explanation of what this parameter actually does',\n        },\n      },\n    },\n    required: ['model', 'transcription', 'translate', 'language'],\n  } as JSONSchemaType<Omit<Speech2TextParams, 'audio'>>,\n}\n"],"mappings":"AAWA,OAAO,MAAMA,iBAAkC,GAAG;EAChDC,KAAK,EAAE,CAAC,CAAC;EACTC,MAAM,EAAE;IACNC,IAAI,EAAE,QAAQ;IACdC,UAAU,EAAE;MACVH,KAAK,EAAE;QACLE,IAAI,EAAE,QAAQ;QACdE,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE,UAAU;QACnBC,IAAI,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;QAC3BC,QAAQ,EAAE;UACRC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,aAAa,EAAE;QACbP,IAAI,EAAE,QAAQ;QACdE,KAAK,EAAE,eAAe;QACtBC,OAAO,EAAE,YAAY;QACrBC,IAAI,EAAE,CAAC,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC;QAClCC,QAAQ,EAAE;UACRC,IAAI,EAAE;QACR;MACF,CAAC;MACDE,SAAS,EAAE;QACTR,IAAI,EAAE,SAAS;QACfE,KAAK,EAAE,WAAW;QAClBC,OAAO,EAAE,KAAK;QACdE,QAAQ,EAAE;UACRC,IAAI,EAAE;QACR;MACF,CAAC;MACDG,QAAQ,EAAE;QACRT,IAAI,EAAE,QAAQ;QACdE,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE,IAAI;QACbeAAe,EAAE,WAAW,EAAE,UAAU;EAC9D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}