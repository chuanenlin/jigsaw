{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/types/Block.ts"],"sourcesContent":["import { BlockParameters } from './BlockParameters'\nimport { Modality } from './Modality'\nimport { Endpoint } from '../constants'\nimport { UnknownObject } from 'uniforms'\n\ntype BlockType = 'input' | 'output' | 'llm'\n\n/**\n * In order to work with multiple inputs of the same modality, we need to give them aliases.\n * The alias is the key that is used when making the API call.\n */\ninterface InputModality {\n  modality: Modality\n  alias?: string\n}\n\nexport interface Block {\n  id: string\n  inputModality: Array<InputModality>\n  outputModality: Modality\n  name: string\n  endpointName?: Endpoint\n  blockParameters?: BlockParameters\n  blockType: BlockType\n  meta?: BlockMeta\n}\n\nexport interface BlockProperties {\n  maxRuntime?: string\n  hardwareRequirements?: {\n    gpu?: number\n    cpu?: number\n    ram?: number\n  }\n}\n\nexport interface BlockMeta {\n  description?: string\n  exampleInput?: {\n    [key: string]: string | Array<string>\n  }\n  exampleOutput?: string\n  properties?: BlockProperties\n}\n\nexport interface BlockData {\n  model?: UnknownObject\n  block: Block\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}