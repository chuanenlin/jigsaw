{"ast":null,"code":"/* eslint-disable */\n;\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['./blockly_compressed'], factory);\n  } else if (typeof exports === 'object') {\n    // Node.js\n    module.exports = factory(require('./blockly_compressed'));\n  } else {\n    // Browser\n    root.Blockly = factory(root.Blockly);\n  }\n})(this, function (Blockly) {\n  /**\n   * @license\n   * Copyright 2020 Google LLC\n   * SPDX-License-Identifier: Apache-2.0\n   */\n\n  /**\n   * @fileoverview Blockly module; just a wrapper for blockly_compressed.js.\n   */\n\n  return Blockly;\n});","map":{"version":3,"names":["root","factory","define","amd","exports","module","require","Blockly"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/node_modules/blockly/blockly.js"],"sourcesContent":["/* eslint-disable */\n;(function(root, factory) {\n  if (typeof define === 'function' && define.amd) { // AMD\n    define(['./blockly_compressed'], factory);\n  } else if (typeof exports === 'object') { // Node.js\n    module.exports = factory(require('./blockly_compressed'));\n  } else { // Browser\n    root.Blockly = factory(root.Blockly);\n  }\n}(this, function(Blockly) {\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Blockly module; just a wrapper for blockly_compressed.js.\n */\n\nreturn Blockly;\n}));\n"],"mappings":"AAAA;AACA;AAAE,WAASA,IAAI,EAAEC,OAAO,EAAE;EACxB,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,EAAE;IAAE;IAChDD,MAAM,CAAC,CAAC,sBAAsB,CAAC,EAAED,OAAO,CAAC;EAC3C,CAAC,MAAM,IAAI,OAAOG,OAAO,KAAK,QAAQ,EAAE;IAAE;IACxCC,MAAM,CAACD,OAAO,GAAGH,OAAO,CAACK,OAAO,CAAC,sBAAsB,CAAC,CAAC;EAC3D,CAAC,MAAM;IAAE;IACPN,IAAI,CAACO,OAAO,GAAGN,OAAO,CAACD,IAAI,CAACO,OAAO,CAAC;EACtC;AACF,CAAC,EAAC,IAAI,EAAE,UAASA,OAAO,EAAE;EAC1B;AACA;AACA;AACA;AACA;;EAEA;AACA;AACA;;EAEA,OAAOA,OAAO;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}