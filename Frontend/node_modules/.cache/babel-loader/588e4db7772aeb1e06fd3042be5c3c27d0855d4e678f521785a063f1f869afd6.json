{"ast":null,"code":"import Blockly from 'blockly/core';\nimport * as En from 'blockly/msg/en';\n\n/**\n * Override the default Blockly behaviour.\n * Add any custom overrides here.\n */\nexport const overrideBlockly = () => {\n  /**\n   * Override the zoom scale to disable zooming toolbox when workspace is zoomed\n   * @override\n   */\n  Blockly.VerticalFlyout.prototype.getFlyoutScale = function () {\n    return 1;\n  };\n\n  /**\n   * Set the locale to avoid messages not being loaded\n   * https://groups.google.com/g/blockly/c/jbZZabrAsMk/m/d94HXtWQAAAJ\n   */\n  Blockly.setLocale(En);\n};","map":{"version":3,"names":["Blockly","En","overrideBlockly","VerticalFlyout","prototype","getFlyoutScale","setLocale"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/blockly/blockly-overrides.ts"],"sourcesContent":["import Blockly from 'blockly/core'\nimport * as En from 'blockly/msg/en'\n\n/**\n * Override the default Blockly behaviour.\n * Add any custom overrides here.\n */\nexport const overrideBlockly = () => {\n  /**\n   * Override the zoom scale to disable zooming toolbox when workspace is zoomed\n   * @override\n   */\n  Blockly.VerticalFlyout.prototype.getFlyoutScale = function () {\n    return 1\n  }\n\n  /**\n   * Set the locale to avoid messages not being loaded\n   * https://groups.google.com/g/blockly/c/jbZZabrAsMk/m/d94HXtWQAAAJ\n   */\n  Blockly.setLocale(En)\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAO,KAAKC,EAAE,MAAM,gBAAgB;;AAEpC;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC;AACF;AACA;AACA;EACEF,OAAO,CAACG,cAAc,CAACC,SAAS,CAACC,cAAc,GAAG,YAAY;IAC5D,OAAO,CAAC;EACV,CAAC;;EAED;AACF;AACA;AACA;EACEL,OAAO,CAACM,SAAS,CAACL,EAAE,CAAC;AACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}