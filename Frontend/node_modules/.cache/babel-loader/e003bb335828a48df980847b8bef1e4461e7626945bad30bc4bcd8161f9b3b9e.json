{"ast":null,"code":"var _jsxFileName = \"/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/uniforms/fields/SelectFileField.tsx\";\nimport { connectField } from 'uniforms';\nimport { Button, styled } from '@mui/material';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisuallyHiddenInput = styled('input')({\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  overflow: 'hidden',\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  whiteSpace: 'nowrap',\n  width: 1\n});\n_c = VisuallyHiddenInput;\nconst SelectFile = _ref => {\n  let {\n    label,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full flex flex-col pt-2 pb-2\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      component: \"label\",\n      variant: \"outlined\",\n      startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 63\n      }, this),\n      children: [label, /*#__PURE__*/_jsxDEV(VisuallyHiddenInput, {\n        onChange: inputEvent => {\n          const files = inputEvent.target.files;\n          if (files && files[0]) {\n            onChange({\n              content: URL.createObjectURL(files[0]),\n              name: files[0].name\n            });\n          }\n        },\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SelectFile;\nexport const SelectFileField = connectField(SelectFile);\n_c3 = SelectFileField;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"VisuallyHiddenInput\");\n$RefreshReg$(_c2, \"SelectFile\");\n$RefreshReg$(_c3, \"SelectFileField\");","map":{"version":3,"names":["connectField","Button","styled","CloudUploadIcon","jsxDEV","_jsxDEV","VisuallyHiddenInput","clip","clipPath","height","overflow","position","bottom","left","whiteSpace","width","_c","SelectFile","_ref","label","onChange","className","children","component","variant","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","inputEvent","files","target","content","URL","createObjectURL","name","type","_c2","SelectFileField","_c3","$RefreshReg$"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/uniforms/fields/SelectFileField.tsx"],"sourcesContent":["import { FieldProps, connectField } from 'uniforms'\nimport { TextFieldProps } from 'uniforms-mui'\nimport { Button, styled } from '@mui/material'\n\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload'\nimport { SelectedFile } from '../../../api'\n\nconst VisuallyHiddenInput = styled('input')({\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  overflow: 'hidden',\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  whiteSpace: 'nowrap',\n  width: 1,\n})\n\ntype SelectFileFieldProps = FieldProps<SelectedFile, TextFieldProps>\n\nconst SelectFile = ({ label, onChange }: SelectFileFieldProps) => {\n  return (\n    <div className='w-full h-full flex flex-col pt-2 pb-2'>\n      <Button component='label' variant='outlined' startIcon={<CloudUploadIcon />}>\n        {label}\n        <VisuallyHiddenInput\n          onChange={(inputEvent) => {\n            const files = inputEvent.target.files\n            if (files && files[0]) {\n              onChange({\n                content: URL.createObjectURL(files[0]),\n                name: files[0].name,\n              })\n            }\n          }}\n          type='file'\n        />\n      </Button>\n    </div>\n  )\n}\n\nexport const SelectFileField = connectField(SelectFile)\n"],"mappings":";AAAA,SAAqBA,YAAY,QAAQ,UAAU;AAEnD,SAASC,MAAM,EAAEC,MAAM,QAAQ,eAAe;AAE9C,OAAOC,eAAe,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG7D,MAAMC,mBAAmB,GAAGJ,MAAM,CAAC,OAAO,CAAC,CAAC;EAC1CK,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,YAAY;EACtBC,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE,QAAQ;EAClBC,QAAQ,EAAE,UAAU;EACpBC,MAAM,EAAE,CAAC;EACTC,IAAI,EAAE,CAAC;EACPC,UAAU,EAAE,QAAQ;EACpBC,KAAK,EAAE;AACT,CAAC,CAAC;AAAAC,EAAA,GAVIV,mBAAmB;AAczB,MAAMW,UAAU,GAAGC,IAAA,IAA+C;EAAA,IAA9C;IAAEC,KAAK;IAAEC;EAA+B,CAAC,GAAAF,IAAA;EAC3D,oBACEb,OAAA;IAAKgB,SAAS,EAAC,uCAAuC;IAAAC,QAAA,eACpDjB,OAAA,CAACJ,MAAM;MAACsB,SAAS,EAAC,OAAO;MAACC,OAAO,EAAC,UAAU;MAACC,SAAS,eAAEpB,OAAA,CAACF,eAAe;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MAAAP,QAAA,GACzEH,KAAK,eACNd,OAAA,CAACC,mBAAmB;QAClBc,QAAQ,EAAGU,UAAU,IAAK;UACxB,MAAMC,KAAK,GAAGD,UAAU,CAACE,MAAM,CAACD,KAAK;UACrC,IAAIA,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;YACrBX,QAAQ,CAAC;cACPa,OAAO,EAAEC,GAAG,CAACC,eAAe,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC;cACtCK,IAAI,EAAEL,KAAK,CAAC,CAAC,CAAC,CAACK;YACjB,CAAC,CAAC;UACJ;QACF,CAAE;QACFC,IAAI,EAAC;MAAM;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAS,GAAA,GApBKrB,UAAU;AAsBhB,OAAO,MAAMsB,eAAe,GAAGvC,YAAY,CAACiB,UAAU,CAAC;AAAAuB,GAAA,GAA1CD,eAAe;AAAA,IAAAvB,EAAA,EAAAsB,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}