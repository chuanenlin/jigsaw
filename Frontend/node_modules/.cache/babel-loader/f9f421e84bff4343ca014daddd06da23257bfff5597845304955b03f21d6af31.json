{"ast":null,"code":"export const extractBlockRuntimeValueAndUnit = inputString => {\n  const defaultValue = {\n    runtime: Number.MAX_SAFE_INTEGER,\n    unit: 's'\n  };\n  if (!inputString) {\n    return defaultValue;\n  }\n  const pattern = /^(\\d+)([smh])$/;\n  const match = inputString.match(pattern);\n  if (match) {\n    const runtime = parseInt(match[1]);\n    const unit = match[2];\n    return {\n      runtime,\n      unit\n    };\n  }\n  return defaultValue;\n};","map":{"version":3,"names":["extractBlockRuntimeValueAndUnit","inputString","defaultValue","runtime","Number","MAX_SAFE_INTEGER","unit","pattern","match","parseInt"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/components/blockly/util.ts"],"sourcesContent":["export const extractBlockRuntimeValueAndUnit = (inputString?: string) => {\n  const defaultValue = { runtime: Number.MAX_SAFE_INTEGER, unit: 's' }\n\n  if (!inputString) {\n    return defaultValue\n  }\n\n  const pattern = /^(\\d+)([smh])$/\n  const match = inputString.match(pattern)\n\n  if (match) {\n    const runtime = parseInt(match[1])\n    const unit = match[2]\n\n    return { runtime, unit }\n  }\n\n  return defaultValue\n}\n"],"mappings":"AAAA,OAAO,MAAMA,+BAA+B,GAAIC,WAAoB,IAAK;EACvE,MAAMC,YAAY,GAAG;IAAEC,OAAO,EAAEC,MAAM,CAACC,gBAAgB;IAAEC,IAAI,EAAE;EAAI,CAAC;EAEpE,IAAI,CAACL,WAAW,EAAE;IAChB,OAAOC,YAAY;EACrB;EAEA,MAAMK,OAAO,GAAG,gBAAgB;EAChC,MAAMC,KAAK,GAAGP,WAAW,CAACO,KAAK,CAACD,OAAO,CAAC;EAExC,IAAIC,KAAK,EAAE;IACT,MAAML,OAAO,GAAGM,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,MAAMF,IAAI,GAAGE,KAAK,CAAC,CAAC,CAAC;IAErB,OAAO;MAAEL,OAAO;MAAEG;IAAK,CAAC;EAC1B;EAEA,OAAOJ,YAAY;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}