{"ast":null,"code":"import { Modality } from '../types';\nimport { makeApiCall } from './api';\nimport { Endpoint } from '../constants';\nimport { getOutputFromResponse } from '../components/input-output';\nimport { uploadFile } from './upload';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const blockRequestProcessors = {\n  [Endpoint.Text2Text]: async params => makeApiCall(Endpoint.Text2Text, params),\n  [Endpoint.Text2Img]: async params => makeApiCall(Endpoint.Text2Img, params),\n  [Endpoint.Text2Video]: async params => makeApiCall(Endpoint.Text2Video, params),\n  [Endpoint.Text23D]: async params => makeApiCall(Endpoint.Text23D, params),\n  [Endpoint.Text2Audio]: async params => makeApiCall(Endpoint.Text2Audio, params),\n  [Endpoint.Text2Music]: async params => makeApiCall(Endpoint.Text2Music, params),\n  [Endpoint.Image2Text]: async params => makeApiCall(Endpoint.Image2Text, params),\n  [Endpoint.Image2SuperImage]: async params => makeApiCall(Endpoint.Image2SuperImage, params),\n  [Endpoint.Image2GoodFaceImage]: async params => makeApiCall(Endpoint.Image2GoodFaceImage, params),\n  [Endpoint.ImageGray2ImageColor]: async params => makeApiCall(Endpoint.ImageGray2ImageColor, params),\n  [Endpoint.Image2Cutout]: async params => makeApiCall(Endpoint.Image2Cutout, params),\n  [Endpoint.Image2Box]: async params => makeApiCall(Endpoint.Image2Box, params),\n  [Endpoint.Image2Video]: async params => makeApiCall(Endpoint.Image2Video, params),\n  [Endpoint.Music2Text]: async params => makeApiCall(Endpoint.Music2Text, params),\n  [Endpoint.Speech2Text]: async params => makeApiCall(Endpoint.Speech2Text, params),\n  [Endpoint.Text2Speech]: async params => makeApiCall(Endpoint.Text2Speech, params),\n  [Endpoint.TextAndPose2Image]: async params => makeApiCall(Endpoint.TextAndPose2Image, params),\n  [Endpoint.TextAndSeg2Image]: async params => makeApiCall(Endpoint.TextAndSeg2Image, params),\n  [Endpoint.TextAndDepth2Image]: async params => makeApiCall(Endpoint.TextAndDepth2Image, params),\n  [Endpoint.TextAndNormal2Image]: async params => makeApiCall(Endpoint.TextAndNormal2Image, params),\n  [Endpoint.TextAndEdge2Image]: async params => makeApiCall(Endpoint.TextAndEdge2Image, params),\n  [Endpoint.TextAndSketch2Image]: async params => makeApiCall(Endpoint.TextAndSketch2Image, params),\n  [Endpoint.TextAndSketch2Art]: async params => makeApiCall(Endpoint.TextAndSketch2Art, params),\n  [Endpoint.Image2Character]: async params => makeApiCall(Endpoint.Image2Character, params),\n  [Endpoint.Image2Tags]: async params => makeApiCall(Endpoint.Image2Tags, params),\n  [Endpoint.Image2NoPeopleImage]: async params => makeApiCall(Endpoint.Image2NoPeopleImage, params),\n  [Endpoint.Image2Pose]: async params => makeApiCall(Endpoint.Image2Pose, params),\n  [Endpoint.Image2Depth]: async params => makeApiCall(Endpoint.Image2Depth, params),\n  [Endpoint.Image2Normal]: async params => makeApiCall(Endpoint.Image2Normal, params),\n  [Endpoint.Image2Edge]: async params => makeApiCall(Endpoint.Image2Edge, params),\n  [Endpoint.Image2Seg]: async params => makeApiCall(Endpoint.Image2Seg, params),\n  [Endpoint.Image23d]: async params => makeApiCall(Endpoint.Image23d, params),\n  [Endpoint.ImageColor2ImageGray]: async params => makeApiCall(Endpoint.ImageColor2ImageGray, params),\n  [Endpoint.ImageAndText2Image]: async params => makeApiCall(Endpoint.ImageAndText2Image, params),\n  [Endpoint.Video2Text]: async params => makeApiCall(Endpoint.Video2Text, params),\n  [Endpoint.Video2SuperVideo]: async params => makeApiCall(Endpoint.Video2SuperVideo, params),\n  [Endpoint.Video2SmoothVideo]: async params => makeApiCall(Endpoint.Video2SmoothVideo, params),\n  [Endpoint.Video2Cutout]: async params => makeApiCall(Endpoint.Video2Cutout, params),\n  [Endpoint.SpeechSpeech2Speech]: async params => makeApiCall(Endpoint.SpeechSpeech2Speech, params),\n  [Endpoint.Face2TalkingHead]: async params => makeApiCall(Endpoint.Face2TalkingHead, params)\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isFileUploadObject = value => value.content && typeof value.content === 'string' && value.content.startsWith('blob:');\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const transformParam = (value, key) => {\n  if (isFileUploadObject(value)) {\n    return uploadFile(value, value.type);\n  }\n  return value;\n};\n\n/**\n * Generate the params for the block.\n * The params are generated based on the block's inputs and the blocks params itself.\n * This is required to get the input from the previous block and pass it to the current block.\n * For example, text2iage block requires the prompt from the text2text block but the prompt is not\n * part of the block's params.\n * @params block - The block to generate the params for\n * @returns -\n */\nexport const generateBlockParams = block => {\n  var _block$blockData$bloc, _block$inputs, _block$inputs2, _block$inputs3;\n  let params = {\n    ...((_block$blockData$bloc = block.blockData.blockParameters) === null || _block$blockData$bloc === void 0 ? void 0 : _block$blockData$bloc.model)\n  };\n  if ((_block$inputs = block.inputs) !== null && _block$inputs !== void 0 && _block$inputs[Modality.Text]) {\n    params = {\n      ...params,\n      prompt: block.inputs[Modality.Text].text_output\n    };\n  }\n  if ((_block$inputs2 = block.inputs) !== null && _block$inputs2 !== void 0 && _block$inputs2[Modality.Image]) {\n    params = {\n      ...params,\n      image: block.inputs[Modality.Image].image_output\n    };\n  }\n\n  /**\n   * Get inputs that have aliases (multiple inputs with same modality)\n   */\n  if (Object.keys((_block$inputs3 = block.inputs) !== null && _block$inputs3 !== void 0 ? _block$inputs3 : {}).some(key => !Object.keys(Modality).includes(key))) {\n    params = {\n      ...params,\n      ...getInputValues(block.inputs)\n    };\n  }\n\n  // TODO: handle other modalities\n  // ....\n\n  // TODO: fix type issue\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return params;\n};\nconst getInputValues = inputs => {\n  const inputValues = {};\n  Object.entries(inputs !== null && inputs !== void 0 ? inputs : {}).forEach(_ref => {\n    let [key, value] = _ref;\n    inputValues[key] = getOutputFromResponse(value);\n  });\n  return inputValues;\n};","map":{"version":3,"names":["Modality","makeApiCall","Endpoint","getOutputFromResponse","uploadFile","blockRequestProcessors","Text2Text","params","Text2Img","Text2Video","Text23D","Text2Audio","Text2Music","Image2Text","Image2SuperImage","Image2GoodFaceImage","ImageGray2ImageColor","Image2Cutout","Image2Box","Image2Video","Music2Text","Speech2Text","Text2Speech","TextAndPose2Image","TextAndSeg2Image","TextAndDepth2Image","TextAndNormal2Image","TextAndEdge2Image","TextAndSketch2Image","TextAndSketch2Art","Image2Character","Image2Tags","Image2NoPeopleImage","Image2Pose","Image2Depth","Image2Normal","Image2Edge","Image2Seg","Image23d","ImageColor2ImageGray","ImageAndText2Image","Video2Text","Video2SuperVideo","Video2SmoothVideo","Video2Cutout","SpeechSpeech2Speech","Face2TalkingHead","isFileUploadObject","value","content","startsWith","transformParam","key","type","generateBlockParams","block","_block$blockData$bloc","_block$inputs","_block$inputs2","_block$inputs3","blockData","blockParameters","model","inputs","Text","prompt","text_output","Image","image","image_output","Object","keys","some","includes","getInputValues","inputValues","entries","forEach","_ref"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/src/api/block.ts"],"sourcesContent":["import { OnlyImageParams, OnlyPromptParams, OnlyVideoParams } from '../constants/block-list/common'\nimport { Text2ImageParams } from '../constants/block-list/text2image/text2image.params'\nimport { Text2TextParams } from '../constants/block-list/text2text/text2text.params'\nimport { BlockProcessInputs, ProcessableBlock } from '../context/WorkspaceContext'\nimport { Modality } from '../types'\nimport { makeApiCall } from './api'\nimport { A3dResponse, AudioResponse, ImageResponse, TextResponse, VideoResponse } from './types'\nimport { Text2VideoParams } from '../constants/block-list/text2video/text2video.params'\nimport { Text23dParams } from '../constants/block-list/text23d/text23d.params'\nimport { Text2AudioParams } from '../constants/block-list/text2audio/text2audio.params'\nimport { Text2MusicParams } from '../constants/block-list/text2music/text2music.params'\nimport { OnlyAudioParams } from '../constants/block-list/common/OnlyAudio.params'\nimport { Endpoint } from '../constants'\nimport { TextAndPose2ImageParams } from '../constants/block-list/textandpose2image/textandpose2image.params'\nimport { TextAndSeg2ImageParams } from '../constants/block-list/textandseg2image/textandseg2image.params'\nimport { TextAndDepth2ImageParams } from '../constants/block-list/textanddepth2image/textanddepth2image.params'\nimport { TextAndNormal2ImageParams } from '../constants/block-list/textandnormal2image/textandnormal2image.params'\nimport { TextAndEdge2ImageParams } from '../constants/block-list/textandedge2image/textandedge2image.params'\nimport { TextAndSketch2ArtParams } from '../constants/block-list/textandsketch2art/textandsketch2art.params'\nimport { TextAndSketch2ImageParams } from '../constants/block-list/textandsketch2image/textandsketch2image.params'\nimport { Image2VideoParams } from '../constants/block-list/image2video/image2video.params'\nimport { Image23dParams } from '../constants/block-list/image23d/image23d.params'\nimport { ImageAndText2ImageParams } from '../constants/block-list/imageandtext2image/imageandtext2image.params'\nimport { Video2SmoothVideoParams } from '../constants/block-list/video2smoothVideo/video2smoothVideo.params'\nimport { SpeechSpeech2SpeechParams } from '../constants/block-list/speechSpeech2speech'\nimport { getOutputFromResponse } from '../components/input-output'\nimport { Face2TalkingHeadParams } from '../constants/block-list/face2TalkingHead'\nimport { uploadFile } from './upload'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const blockRequestProcessors = {\n  [Endpoint.Text2Text]: async (params: Text2TextParams): Promise<TextResponse> =>\n    makeApiCall(Endpoint.Text2Text, params),\n  [Endpoint.Text2Img]: async (params: Text2ImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Text2Img, params),\n  [Endpoint.Text2Video]: async (params: Text2VideoParams): Promise<VideoResponse> =>\n    makeApiCall(Endpoint.Text2Video, params),\n  [Endpoint.Text23D]: async (params: Text23dParams): Promise<A3dResponse> =>\n    makeApiCall(Endpoint.Text23D, params),\n  [Endpoint.Text2Audio]: async (params: Text2AudioParams): Promise<AudioResponse> =>\n    makeApiCall(Endpoint.Text2Audio, params),\n  [Endpoint.Text2Music]: async (params: Text2MusicParams): Promise<AudioResponse> =>\n    makeApiCall(Endpoint.Text2Music, params),\n  [Endpoint.Image2Text]: async (params: OnlyImageParams): Promise<TextResponse> =>\n    makeApiCall(Endpoint.Image2Text, params),\n  [Endpoint.Image2SuperImage]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2SuperImage, params),\n  [Endpoint.Image2GoodFaceImage]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2GoodFaceImage, params),\n  [Endpoint.ImageGray2ImageColor]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.ImageGray2ImageColor, params),\n  [Endpoint.Image2Cutout]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2Cutout, params),\n  [Endpoint.Image2Box]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2Box, params),\n  [Endpoint.Image2Video]: async (params: Image2VideoParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2Video, params),\n  [Endpoint.Music2Text]: async (params: OnlyAudioParams): Promise<TextResponse> =>\n    makeApiCall(Endpoint.Music2Text, params),\n  [Endpoint.Speech2Text]: async (params: OnlyAudioParams): Promise<TextResponse> =>\n    makeApiCall(Endpoint.Speech2Text, params),\n  [Endpoint.Text2Speech]: async (params: OnlyPromptParams): Promise<AudioResponse> =>\n    makeApiCall(Endpoint.Text2Speech, params),\n  [Endpoint.TextAndPose2Image]: async (params: TextAndPose2ImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.TextAndPose2Image, params),\n  [Endpoint.TextAndSeg2Image]: async (params: TextAndSeg2ImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.TextAndSeg2Image, params),\n  [Endpoint.TextAndDepth2Image]: async (params: TextAndDepth2ImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.TextAndDepth2Image, params),\n  [Endpoint.TextAndNormal2Image]: async (\n    params: TextAndNormal2ImageParams,\n  ): Promise<ImageResponse> => makeApiCall(Endpoint.TextAndNormal2Image, params),\n  [Endpoint.TextAndEdge2Image]: async (params: TextAndEdge2ImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.TextAndEdge2Image, params),\n  [Endpoint.TextAndSketch2Image]: async (\n    params: TextAndSketch2ImageParams,\n  ): Promise<ImageResponse> => makeApiCall(Endpoint.TextAndSketch2Image, params),\n  [Endpoint.TextAndSketch2Art]: async (params: TextAndSketch2ArtParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.TextAndSketch2Art, params),\n  [Endpoint.Image2Character]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2Character, params),\n  [Endpoint.Image2Tags]: async (params: OnlyImageParams): Promise<TextResponse> =>\n    makeApiCall(Endpoint.Image2Tags, params),\n  [Endpoint.Image2NoPeopleImage]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2NoPeopleImage, params),\n  [Endpoint.Image2Pose]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2Pose, params),\n  [Endpoint.Image2Depth]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2Depth, params),\n  [Endpoint.Image2Normal]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2Normal, params),\n  [Endpoint.Image2Edge]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2Edge, params),\n  [Endpoint.Image2Seg]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.Image2Seg, params),\n  [Endpoint.Image23d]: async (params: Image23dParams): Promise<A3dResponse> =>\n    makeApiCall(Endpoint.Image23d, params),\n  [Endpoint.ImageColor2ImageGray]: async (params: OnlyImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.ImageColor2ImageGray, params),\n  [Endpoint.ImageAndText2Image]: async (params: ImageAndText2ImageParams): Promise<ImageResponse> =>\n    makeApiCall(Endpoint.ImageAndText2Image, params),\n  [Endpoint.Video2Text]: async (params: OnlyVideoParams): Promise<TextResponse> =>\n    makeApiCall(Endpoint.Video2Text, params),\n  [Endpoint.Video2SuperVideo]: async (params: OnlyVideoParams): Promise<VideoResponse> =>\n    makeApiCall(Endpoint.Video2SuperVideo, params),\n  [Endpoint.Video2SmoothVideo]: async (params: Video2SmoothVideoParams): Promise<VideoResponse> =>\n    makeApiCall(Endpoint.Video2SmoothVideo, params),\n  [Endpoint.Video2Cutout]: async (params: OnlyVideoParams): Promise<VideoResponse> =>\n    makeApiCall(Endpoint.Video2Cutout, params),\n  [Endpoint.SpeechSpeech2Speech]: async (\n    params: SpeechSpeech2SpeechParams,\n  ): Promise<AudioResponse> => makeApiCall(Endpoint.SpeechSpeech2Speech, params),\n  [Endpoint.Face2TalkingHead]: async (params: Face2TalkingHeadParams): Promise<AudioResponse> =>\n    makeApiCall(Endpoint.Face2TalkingHead, params),\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isFileUploadObject = (value: any) =>\n  value.content && typeof value.content === 'string' && value.content.startsWith('blob:')\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const transformParam = (value: any, key: string) => {\n  if (isFileUploadObject(value)) {\n    return uploadFile(value, value.type)\n  }\n\n  return value\n}\n\n/**\n * Generate the params for the block.\n * The params are generated based on the block's inputs and the blocks params itself.\n * This is required to get the input from the previous block and pass it to the current block.\n * For example, text2iage block requires the prompt from the text2text block but the prompt is not\n * part of the block's params.\n * @params block - The block to generate the params for\n * @returns -\n */\nexport const generateBlockParams = (block: ProcessableBlock) => {\n  let params = { ...block.blockData.blockParameters?.model }\n  if (block.inputs?.[Modality.Text]) {\n    params = { ...params, prompt: (block.inputs[Modality.Text] as TextResponse).text_output }\n  }\n\n  if (block.inputs?.[Modality.Image]) {\n    params = { ...params, image: (block.inputs[Modality.Image] as ImageResponse).image_output }\n  }\n\n  /**\n   * Get inputs that have aliases (multiple inputs with same modality)\n   */\n  if (Object.keys(block.inputs ?? {}).some((key) => !Object.keys(Modality).includes(key))) {\n    params = {\n      ...params,\n      ...getInputValues(block.inputs),\n    }\n  }\n\n  // TODO: handle other modalities\n  // ....\n\n  // TODO: fix type issue\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return params as any\n}\n\nconst getInputValues = (inputs?: BlockProcessInputs) => {\n  const inputValues: Record<string, unknown> = {}\n  Object.entries(inputs ?? {}).forEach(([key, value]) => {\n    inputValues[key] = getOutputFromResponse(value)\n  })\n\n  return inputValues\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}