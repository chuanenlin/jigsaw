{"ast":null,"code":"// Workaround for SSR\n// https://github.com/vazco/uniforms/issues/40\n// https://github.com/facebook/react/issues/4000\nfunction randomIdsGenerator(prefix) {\n  let counter = 0;\n  return () => `${prefix}-${('000' + (counter++).toString(36)).slice(-4)}`;\n}\nconst randomIdPrefix = randomIdsGenerator('uniforms');\nexport function randomIds() {\n  let prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : randomIdPrefix();\n  return randomIdsGenerator(prefix);\n}","map":{"version":3,"names":["randomIdsGenerator","prefix","counter","toString","slice","randomIdPrefix","randomIds","arguments","length","undefined"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/node_modules/uniforms/esm/randomIds.js"],"sourcesContent":["// Workaround for SSR\n// https://github.com/vazco/uniforms/issues/40\n// https://github.com/facebook/react/issues/4000\nfunction randomIdsGenerator(prefix) {\n    let counter = 0;\n    return () => `${prefix}-${('000' + (counter++).toString(36)).slice(-4)}`;\n}\nconst randomIdPrefix = randomIdsGenerator('uniforms');\nexport function randomIds(prefix = randomIdPrefix()) {\n    return randomIdsGenerator(prefix);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,kBAAkBA,CAACC,MAAM,EAAE;EAChC,IAAIC,OAAO,GAAG,CAAC;EACf,OAAO,MAAO,GAAED,MAAO,IAAG,CAAC,KAAK,GAAG,CAACC,OAAO,EAAE,EAAEC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAE,EAAC;AAC5E;AACA,MAAMC,cAAc,GAAGL,kBAAkB,CAAC,UAAU,CAAC;AACrD,OAAO,SAASM,SAASA,CAAA,EAA4B;EAAA,IAA3BL,MAAM,GAAAM,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGF,cAAc,CAAC,CAAC;EAC/C,OAAOL,kBAAkB,CAACC,MAAM,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}