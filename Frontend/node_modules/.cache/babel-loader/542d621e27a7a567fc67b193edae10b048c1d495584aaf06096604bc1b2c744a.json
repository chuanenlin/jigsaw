{"ast":null,"code":"import clone from 'lodash/clone';\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport React, { Component } from 'react';\nimport { changedKeys } from './changedKeys';\nimport { context } from './context';\nimport { randomIds } from './randomIds';\nexport class BaseForm extends Component {\n  constructor(props) {\n    var _this;\n    // @ts-expect-error: State may be bigger, but it'll be covered by the subclasses.\n    super(props);\n    _this = this;\n    this.state = {\n      changed: false,\n      changedMap: Object.create(null),\n      resetCount: 0,\n      submitted: false,\n      submitting: false\n    };\n    this.mounted = false;\n    this.randomId = randomIds(this.props.id);\n    this.onReset = this.reset = this.onReset.bind(this);\n    this.onChange = this.change = this.onChange.bind(this);\n    this.onSubmit = this.submit = this.onSubmit.bind(this);\n    // TODO: It shouldn't be here\n    const getModel = this.getModel.bind(this);\n    this.getModel = function (mode) {\n      let model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getModel(mode);\n      return mode !== undefined && _this.props.modelTransform ? _this.props.modelTransform(mode, model) : model;\n    };\n  }\n  componentDidMount() {\n    this.mounted = true;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  componentDidUpdate(prevProps, prevState, snapshot) {}\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.delayId) {\n      clearTimeout(this.delayId);\n    }\n    // There are at least 4 places where we'd need to check, whether or not we\n    // actually perform `setState` after the component gets unmounted. Instead,\n    // we override it to hide the React warning. Also because React no longer\n    // will raise it in the newer versions.\n    // https://github.com/facebook/react/pull/22114\n    // https://github.com/vazco/uniforms/issues/1152\n    this.setState = () => {};\n  }\n  getContext() {\n    return {\n      changed: this.state.changed,\n      changedMap: this.state.changedMap,\n      error: this.getContextError(),\n      formRef: this,\n      model: this.getContextModel(),\n      name: this.getContextName(),\n      onChange: this.getContextOnChange(),\n      onSubmit: this.getContextOnSubmit(),\n      randomId: this.randomId,\n      schema: this.getContextSchema(),\n      state: this.getContextState(),\n      submitted: this.state.submitted,\n      submitting: this.state.submitting,\n      validating: false\n    };\n  }\n  getContextName() {\n    return [];\n  }\n  getContextError() {\n    return this.props.error;\n  }\n  getContextModel() {\n    return this.getModel('form');\n  }\n  getContextState() {\n    return {\n      disabled: !!this.props.disabled,\n      label: !!this.props.label,\n      placeholder: !!this.props.placeholder,\n      readOnly: !!this.props.readOnly,\n      showInlineError: !!this.props.showInlineError\n    };\n  }\n  getContextSchema() {\n    return this.props.schema;\n  }\n  getContextOnChange() {\n    // It's bound in constructor.\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    return this.onChange;\n  }\n  getContextOnSubmit() {\n    // It's bound in constructor.\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    return this.onSubmit;\n  }\n  getModel(mode) {\n    let model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props.model;\n    return model;\n  }\n  getNativeFormProps() {\n    const props = omit(this.props, ['autosave', 'autosaveDelay', 'disabled', 'error', 'label', 'model', 'modelTransform', 'onChange', 'onSubmit', 'placeholder', 'readOnly', 'schema', 'showInlineError']);\n    return Object.assign(Object.assign({}, props), {\n      // It's bound in constructor.\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      onSubmit: this.onSubmit,\n      key: `reset-${this.state.resetCount}`\n    });\n  }\n  onChange(key, value) {\n    // Do not set `changed` before componentDidMount\n    if (this.mounted) {\n      const keys = changedKeys(key, value, get(this.getModel(), key));\n      if (keys.length !== 0) {\n        this.setState(state =>\n        // If all are already marked, we can skip the update completely.\n        state.changed && keys.every(key => !!get(state.changedMap, key)) ? null : {\n          changed: true,\n          changedMap: keys.reduce((changedMap, key) => setWith(changedMap, key, {}, clone), clone(state.changedMap))\n        });\n      }\n    }\n    if (this.props.onChange) {\n      this.props.onChange(key, value);\n    }\n    // Do not call `onSubmit` before componentDidMount\n    if (this.mounted && this.props.autosave) {\n      if (this.delayId) {\n        clearTimeout(this.delayId);\n      }\n      // Delay autosave by `autosaveDelay` milliseconds...\n      this.delayId = setTimeout(() => {\n        // ...and wait for all scheduled `setState`s to commit. This is required\n        // for AutoForm to validate correct model, waiting in `onChange`.\n        this.setState(() => null, () => {\n          this.onSubmit();\n        });\n      }, this.props.autosaveDelay);\n    }\n  }\n  __reset(state) {\n    return {\n      changed: false,\n      changedMap: Object.create(null),\n      resetCount: state.resetCount + 1,\n      submitted: false,\n      submitting: false\n    };\n  }\n  onReset() {\n    // @ts-expect-error\n    // It's bound in constructor.\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    this.setState(this.__reset);\n  }\n  onSubmit(event) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.setState(state => state.submitted ? null : {\n      submitted: true\n    });\n    const result = this.props.onSubmit(this.getModel('submit'));\n    if (!(result instanceof Promise)) {\n      return Promise.resolve();\n    }\n    this.setState({\n      submitting: true\n    });\n    return result.finally(() => {\n      this.setState({\n        submitting: false\n      });\n    });\n  }\n  render() {\n    return React.createElement(context.Provider, {\n      value: this.getContext()\n    }, React.createElement(\"form\", Object.assign({}, this.getNativeFormProps())));\n  }\n}\nBaseForm.displayName = 'Form';\nBaseForm.defaultProps = {\n  autosave: false,\n  autosaveDelay: 0,\n  error: null,\n  label: true,\n  model: Object.create(null),\n  noValidate: true,\n  onSubmit() {}\n};","map":{"version":3,"names":["clone","get","omit","setWith","React","Component","changedKeys","context","randomIds","BaseForm","constructor","props","_this","this","state","changed","changedMap","Object","create","resetCount","submitted","submitting","mounted","randomId","id","onReset","reset","bind","onChange","change","onSubmit","submit","getModel","mode","model","arguments","length","undefined","modelTransform","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","componentWillUnmount","delayId","clearTimeout","setState","getContext","error","getContextError","formRef","getContextModel","name","getContextName","getContextOnChange","getContextOnSubmit","schema","getContextSchema","getContextState","validating","disabled","label","placeholder","readOnly","showInlineError","getNativeFormProps","assign","key","value","keys","every","reduce","autosave","setTimeout","autosaveDelay","__reset","event","preventDefault","stopPropagation","result","Promise","resolve","finally","render","createElement","Provider","displayName","defaultProps","noValidate"],"sources":["/Users/chuanenl/MyDrive/CMU/Projects/Jigsaw/Code/Frontend/node_modules/uniforms/esm/BaseForm.js"],"sourcesContent":["import clone from 'lodash/clone';\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\nimport setWith from 'lodash/setWith';\nimport React, { Component } from 'react';\nimport { changedKeys } from './changedKeys';\nimport { context } from './context';\nimport { randomIds } from './randomIds';\nexport class BaseForm extends Component {\n    constructor(props) {\n        super(props);\n        // @ts-expect-error: State may be bigger, but it'll be covered by the subclasses.\n        this.state = {\n            changed: false,\n            changedMap: Object.create(null),\n            resetCount: 0,\n            submitted: false,\n            submitting: false,\n        };\n        this.mounted = false;\n        this.randomId = randomIds(this.props.id);\n        this.onReset = this.reset = this.onReset.bind(this);\n        this.onChange = this.change = this.onChange.bind(this);\n        this.onSubmit = this.submit = this.onSubmit.bind(this);\n        // TODO: It shouldn't be here\n        const getModel = this.getModel.bind(this);\n        this.getModel = (mode, model = getModel(mode)) => mode !== undefined && this.props.modelTransform\n            ? this.props.modelTransform(mode, model)\n            : model;\n    }\n    componentDidMount() {\n        this.mounted = true;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    componentDidUpdate(prevProps, prevState, snapshot) { }\n    componentWillUnmount() {\n        this.mounted = false;\n        if (this.delayId) {\n            clearTimeout(this.delayId);\n        }\n        // There are at least 4 places where we'd need to check, whether or not we\n        // actually perform `setState` after the component gets unmounted. Instead,\n        // we override it to hide the React warning. Also because React no longer\n        // will raise it in the newer versions.\n        // https://github.com/facebook/react/pull/22114\n        // https://github.com/vazco/uniforms/issues/1152\n        this.setState = () => { };\n    }\n    getContext() {\n        return {\n            changed: this.state.changed,\n            changedMap: this.state.changedMap,\n            error: this.getContextError(),\n            formRef: this,\n            model: this.getContextModel(),\n            name: this.getContextName(),\n            onChange: this.getContextOnChange(),\n            onSubmit: this.getContextOnSubmit(),\n            randomId: this.randomId,\n            schema: this.getContextSchema(),\n            state: this.getContextState(),\n            submitted: this.state.submitted,\n            submitting: this.state.submitting,\n            validating: false,\n        };\n    }\n    getContextName() {\n        return [];\n    }\n    getContextError() {\n        return this.props.error;\n    }\n    getContextModel() {\n        return this.getModel('form');\n    }\n    getContextState() {\n        return {\n            disabled: !!this.props.disabled,\n            label: !!this.props.label,\n            placeholder: !!this.props.placeholder,\n            readOnly: !!this.props.readOnly,\n            showInlineError: !!this.props.showInlineError,\n        };\n    }\n    getContextSchema() {\n        return this.props.schema;\n    }\n    getContextOnChange() {\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return this.onChange;\n    }\n    getContextOnSubmit() {\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        return this.onSubmit;\n    }\n    getModel(mode, model = this.props.model) {\n        return model;\n    }\n    getNativeFormProps() {\n        const props = omit(this.props, [\n            'autosave',\n            'autosaveDelay',\n            'disabled',\n            'error',\n            'label',\n            'model',\n            'modelTransform',\n            'onChange',\n            'onSubmit',\n            'placeholder',\n            'readOnly',\n            'schema',\n            'showInlineError',\n        ]);\n        return Object.assign(Object.assign({}, props), { \n            // It's bound in constructor.\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            onSubmit: this.onSubmit, key: `reset-${this.state.resetCount}` });\n    }\n    onChange(key, value) {\n        // Do not set `changed` before componentDidMount\n        if (this.mounted) {\n            const keys = changedKeys(key, value, get(this.getModel(), key));\n            if (keys.length !== 0) {\n                this.setState(state => \n                // If all are already marked, we can skip the update completely.\n                state.changed && keys.every(key => !!get(state.changedMap, key))\n                    ? null\n                    : {\n                        changed: true,\n                        changedMap: keys.reduce((changedMap, key) => setWith(changedMap, key, {}, clone), clone(state.changedMap)),\n                    });\n            }\n        }\n        if (this.props.onChange) {\n            this.props.onChange(key, value);\n        }\n        // Do not call `onSubmit` before componentDidMount\n        if (this.mounted && this.props.autosave) {\n            if (this.delayId) {\n                clearTimeout(this.delayId);\n            }\n            // Delay autosave by `autosaveDelay` milliseconds...\n            this.delayId = setTimeout(() => {\n                // ...and wait for all scheduled `setState`s to commit. This is required\n                // for AutoForm to validate correct model, waiting in `onChange`.\n                this.setState(() => null, () => {\n                    this.onSubmit();\n                });\n            }, this.props.autosaveDelay);\n        }\n    }\n    __reset(state) {\n        return {\n            changed: false,\n            changedMap: Object.create(null),\n            resetCount: state.resetCount + 1,\n            submitted: false,\n            submitting: false,\n        };\n    }\n    onReset() {\n        // @ts-expect-error\n        // It's bound in constructor.\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.setState(this.__reset);\n    }\n    onSubmit(event) {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        this.setState(state => (state.submitted ? null : { submitted: true }));\n        const result = this.props.onSubmit(this.getModel('submit'));\n        if (!(result instanceof Promise)) {\n            return Promise.resolve();\n        }\n        this.setState({ submitting: true });\n        return result.finally(() => {\n            this.setState({ submitting: false });\n        });\n    }\n    render() {\n        return (React.createElement(context.Provider, { value: this.getContext() },\n            React.createElement(\"form\", Object.assign({}, this.getNativeFormProps()))));\n    }\n}\nBaseForm.displayName = 'Form';\nBaseForm.defaultProps = {\n    autosave: false,\n    autosaveDelay: 0,\n    error: null,\n    label: true,\n    model: Object.create(null),\n    noValidate: true,\n    onSubmit() { },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}